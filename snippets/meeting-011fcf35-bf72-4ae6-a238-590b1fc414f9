## Meeting
Calendar Event Title: Retool overview
Calendar Event Time: 2025-09-11T17:00:00-04:00
Meeting Note Title:Retool overview
Attendees: Elijah Yerington
Link: https://notes.granola.ai/d/011fcf35-bf72-4ae6-a238-590b1fc414f9

## Transcript
 
Me: Hello? Hello? Hello. Thanks for know this. Of course. Happy to. So what I was thinking here is maybe you could share your screen. And we could take a look at Retool together, and you can tell me everything you know. Yeah. And generally how I'm going to try to categorize rituals. Three or four main things we're doing. One investigation finding out information about some book, using it to identify some issues. To. Use it for white glove service. Various tools we have to enable. Specific things we want to do for a client. As part. As a paper or as some initiatives that we're rolling out. 3 there is some amount of usage and monitoring and billing is in retool right now. The billing calculation is in a retool right now. So usage. Tracking. Similar to investigation. But slightly different. And then maybe a couple of. Random things. Enabling basis users. To do things that users. Can't access books outside of your firm. So we can access users books. We do that through Green Tool. Great. And then. This is a really helpful framing, by the way. It's great. I will make you on one thing on the investigation aspect of it. Currently, the retools are mostly used on the DI side of things. There's a lot of actually very good tooling that is built into retool that I think engineering could and should be using. I think there's just maybe not there's less of an intention and knowledge to use it there. Mostly because it's ritual things. Right. That's awesome. And then. Do you mind making that a little bigger? Yeah, I'm sorry. I get rid of slights about that all the time. Just have amazing eyes. Normally my basis, which means anytime in a laptop, I'm like, 70%. And then I go into another page, I go into retool. And people, you're like, what's happening here? Mitch is. Whenever I walk by, his screen is, like, teeny tiny. Just to go through some of the most retools. Well, I want to go into a bit of detail in the sense that I do want to just see, like. Yeah, all right. In the universe of retools, what are the ones people are actually using, but then even within them. Let's take this one, which I know is like the workhorse. My understanding. My understanding is that half of the tabs here are being used and half are kind of not. And so I want to understand which. Kind of something out there to flag. Most of these have been around. A lot of these. At least the admin desk part is around for, like, two years. More than two years. There's a lot of just things that were made at some point for something. Yes. Doesn't mean they're being used. Every day, correct? At some point, someone's like, oh, this would be helpful. It gets used once, it still exists. And at this point, maybe it's still works with database changes. This is also kind of another consistent thing with Retool is that there's a lot of SQL queries to the database. As opposed to going through an endpoint of some sort. All of those, theoretically, are in the DB at this point. But yeah, right. Who knows? We change our DB structure, we do think, we update things and then suddenly, like, oh, this thing that we've been relying on for the past two months. Is broken. And I've tried to do something for a client today. And then it was like, oh, I got to get Michael to go face us. If we go fix it that day. And there's a ticking time bomb with Michael Gohn, which is like, this is gonna happen again. Yeah. Everything in here. At some point. Maybe not everything. There's a good amount of things in here that approach you will break less reliable. And Mitch is gonna be in 30 meetings and not be able to fix it. He's the only one at the company right now. Way back when. Bitch was doing way back when. Also everything in the ui. Almost everything in the UI before UI engineers was retool. Mitch was maintaining all of it. And then at some point, Matt was like, this is unsustainable. We got, like, that contractor to help us out. He was not great. Oh, really? And then we got Michael Thomas. And then a lot of other things. But that is to say, there's a lot here. All right, so we're gonna start with. Let's see. One, highlight the four times I have. Well, actually, no, I'm gonna bring him. This effectively. The framing I take is this is where we were able to make actions on user books. Customer books, make changes to them. It does end up. But this is also where you can find some information about their books. Some of that downstream of taking action on it where you need to have the information to take action on it. So where you go for the information? Some of it is downstream of just like not having a place to put something and throwing it. You're going to see a lot of tabs. Up on the top? Yes. Let me point out the important ones. Okay? Onboarding. Glfi accounts. Vendor runs? Not really. Tryken categories. Yes or no? It's not really about the runs. Fit technically has a purpose. I haven't used them. But I have a sense of what they would be useful for. Not the biggest. And can I assume, since you're like, the are, you're the longest tenured DI person. Right? So if you're not using them, then no one is. Is that a fair. Yeah. On the DI team? S. All right. I can see a situation that I would use fit one very specific situation. It's newer. Where? Again. The thing that you know. I would do. It's also the sort of situation I can expect. I don't know how much I like that it exists, okay? Templates of tasks very much used, and we can walk through the points of it that are used. Files they are used. Financial institutions like used. Pretty neat. Task actions. Used specifically as it relates to the Demo account. Okay? Moola etl. Not yet. Chat messages. Kind of meet. This is new. This is for Workspace. Just to be able to look at people's chats. Kind of neat. There's more. That's a little bit needed there. This is visibility into what they are typing into workspace. It's been 20 some 2007 results already. That's pretty good. Unless it's all. I think that's the ledger. S. So, like, if I were looking like, this is like a book level. So, like, I look at the book. I could look at. Hey, this book. I could look into this chat. It's pretty nice. I'd like to be able to download the files as well. But like, this is actually currently. I like this better than the brain trust flow, but very Crystal has a little bit. More. The brain trust flow is basically showing logs of every single one. I understand. Cool. Versions. Useful if you don't have table bus access. Okay? I've never really used this. You do use that. Do you not have table post access? When I was already in the admin dashboard and just needed to quickly see something. Okay, would you put this important or not important? Not important if you have tail plus access. Yeah. Yeah, I think it's good just to spend 15 minutes on, like, blood function. That you're recording. What? Or not. I'm worth it. My functions are important. Okay? Within onboarding. Onboarding. So on. Accountants, you can change user access to. You can give users access to a client. Important. You can delete access to a client. Pretty important. You can update the role at the firm level. So this is for granola context. This is the role that is on the accountants table. Either. Accounts Grandin. Very important. Change name Useless. Change firm. Not necessarily needed as a retool. You could do it in. You. There's very few times you should be doing it. It comes up with obstacles. Business units. Yeah. This is important. This is just newly built. It's important because you can't do one specific thing on the ui, so you need to do it here. But there's also, I think, one part of this that was broken. Because of a ritual bug. And didn't get finished. Herbs, creating a firm very important. Okay? Well, it's pretty important. It's something that needs to happen. Actually viewing the firms. Everything else on this page besides that. Craig from Kind of useless. It's there. You can see it. It's neat. Clients. Great clients. Useless. Give accountants permission. You already have it elsewhere. Books. Editing the onboarding stage. In 42. Sending book ready email. Important. Entities. Useless. Just the whole time. It's just a list of entities. I've never looked at this. You can't even do anything. For this. Nothing that they said. Settings. Important settings lets you create and apply settings to a book. Wii U settings through kind of like custom configurations for books. There's a couple different settings that we have. This is not where we do something like feature flags, but. There's a couple ones in here that are kind of important. Most of them are on the front end. Most of them? You would never need to come into and would always exist. It's nice to have a video. Quality of life. Medium importance. Bill clients bulk books. Quality of life. Not that important bulk for information very quality of life not that it carry non vendor. Glfi. Account. This TX to geomap section of it all. Has been very important. It's a little less needed. Because we built something a little better on the front end. But there's still one or two things I'll come in here for. Which. Sorry, which part of this. The glfi dashboard. Okay. I use this quite a lot. Most of the information on this and most of the actions you could do, you can now do elsewhere. But there's still parts that I like. In here a little bit more. This lets you review. The matches we make between a bank account and a ledger. So. There's a lot there. So this is all. All the tabs in this one are useful. If I cut over as useful Tx Geo map is useful Jail accounts tx accounts use. I haven't looked at those. Maybe eight months, maybe a year. Maybe a year and a year. Tracking categories. Slow and useless. Oh, we already went through that one. Yeah, Everything on there. Going to templates and tasks because that was the ones that we. Yeah. The things that we here blueprints. Being able to apply a blueprint very important. As, like a. As part of service. Full cat tasks. I don't think this still works. And you should just do it through the print section. Explore copy from the tasks. This one is important for resetting the demo. This is part of the process for resetting the demo, where you were able to delete task runs. That's the part of it that's used. Bulk deleting tasks. No. Dsd does this entire section. No reason. Deleting task runs very important for demo. Resetting the demo has like three steps you have to follow. This is one of them. Both deleting task runs both the lead. But I can move it to that movie often. Want to make it look like it has never been run. That's one of the things you have to do. Parent tasks. Does this? I don't know. What. This doesn't even work. That's important. Also not useful, not needed. Files. Very, very useful. This has two things. Let's explore the file tree. Of a firm or a client. And lets you download files. Very, very important. Anytime a user has some issue. And it's related to the file they're using. We need to use this to be able to download the file. And this get list 1000 folders recursive. Furry is very useful. It takes. The whatever you have selected appears like here's everything underneath it. It's a great query. And then you can download like, I can download their. If customers like, hey, I'm having an issue with my parallel invoice task. It's predicting something wrong. Can download the file. Figure out what's going wrong. Otherwise, without any kind of. In the dark, okay? Downloading files. Exploring file street. Very important. Doing that on the firm level. Very important book level, very important entity level, also fairly short. The other kind of useful thing here. Making the folder to a hook or an entity is important. Adding folders or adding folders is useful. We haven't used it in a platform. So I guess it's not that intensive. Leaking a folder is important from all the rear we have to book that already exist. But adding holders to the folders file structure is useful, but not. I haven't done. We haven't had to do that. How should institutions look like? This one's great. I love this. One. We use about four different venting aggregators. To connect banks. Sometimes we need to know what's the best route. Or who supports a specific bank. One I want to go into this as, like, a side note that just popped in before I got it is you. Did you have any interest in becoming a builder and retool? Okay? Because I'm like, I know you're semi. At least you're familiar with technical concepts, and you terminally have the best understanding of what the DIT needs to do. I'm trying to sell you on. I'm just curious. The things that. Technical understanding. I know. That's the other technical knowledge. To build all that? Well, be to be on the phone. I mean, you understand the database. Yeah, but it would just be like, I can query SQL group, like, I can chat GPT, query SQL queries decently, but, like, writing them and writing them loud. Would just get into endless rabbit holes. Maybe that. Like, maybe eventually. Eventually. But like I said, it's not that interesting. The SQL querying the database and setting up, like, the APIs correctly is the part that you're most concerned about. OK, cool, fair enough. But. Yeah, sorry, continue. This is like pat my head. No, it's a great question, but this would be an endless rabbit hole for me. The bandwidth. I get that. But also, like, I would be good. At building this. There we go. I don't think. Fair enough. Financials like. All the eggs that each of our aggregators support and just listing which provider it is. It's helpful. Task actions. This is only used for delete task actions. For resetting the demo. Just about nothing else. The one important thing is being able to. Reset the template by deleting task action. S. Let me just add just on that, like. I mean, I probably know the answer, but, like, why not just have, like, a reset demo button or something, as opposed to, like, that'd be great. I sort of figured it was just like. It's really just that. Yeah, reset devil button would be much better. It's just that the tools were built. To delete it. Separately. And it was like, this is the process of. We never thought the time to make it nicer. Yeah, yeah, understood. That's weird version or cab messages. That's used for here being able to see the. The chat. What's blue and oily is you can't download the files. That are involved. Directly from here. You have to do. Definitely. Better things. That's the end of that. Okay. This was super, super helpful in this piece. I know we have a lot more to cover here, but just while we're on the admin dashboard, My understanding is that one of the ways, maybe there's more, but, like, one of the key ways you guys use this is like, you get a pylon customer request and they say, hey, something went wrong, blah, blah. And then that is sort of the trigger to go into the admin dashboard to start to use. It. Is that correct? Yeah. Is that like, the main or. It's more like there's just a lot of things that this doing yo going for a lot of reasons. Yeah, normally, like, customer thing. Like, oh, I need to go give myself access to the book. I need to. If I need to investigate, you know? Something with their transaction action coming here. If, for whatever reason, we're like, in a. There's other reasons, like if we're in a pilot. And we want to manually do something for the customers. Part of the pilot, like, we want to something that comes up is we'll, like, build their checklist sometimes. Depends on the pilot. We want to be able to. This is one way you can buy tasks to few different books. Make it quicker. Just blueprinting. When we work with the firm, we typically create a blueprint for them. That goes in here. This is where you can. Oh, adding a blueprint here, very important. Assigning it to a firm. Very important like. We'll do that as part of. Like as we get towards the end of a pilot. We'll create this blueprint for them that we kind of go toward together and are, like, happy with the standardization of it. One of the reasons. Yeah. Files are mostly coming in here because something's wrong. Because you need to look at a file. Financial institutions look up. You're in a pilot you want to like, or you ask a question like, hey, what they do you guys support this bank? I can't find it. Awesome that that's really where you're coming in here. Either custom request or preemptively as part of a pilot. Again. This is just for demo chat messages. This is just right now where. Hey, I need to. I need to go. You know, two other side s. We're just preemptively looking at things. Hunting books. I use this, actually, a lot, just for the information about a book. Like I need the id. I need to know. Oh, there's a question from the customer. It's about Mausolorin Estate. I need to go investigate. Or I need to go create a ticket. Like I want to provide this id that's kind of just something that happens. That's why I come into this section. A lot is just like, what book is this? What idea is it? And then I. We can go from there. Makes sense. But yeah. It is mostly like customer says something or room or pilot, and we're coming in here. So it's either part of a. Part of the process of solving some customer issue or preemptively doing something as part of a pilot. Sweet. And maybe on the customer issue side. Like, do you have a common one just to, like, you know, walk me through what a common request might be and then kind of how you might go about the investigation here with the customer revenue tool? Yeah. It's a good question. And. We've been into here, okay? I feel like it's, like, how it's the same issues, but, like, I also feel like every single one of them is individual. There's a common thread of like. Oh, I will say the beginning is always the same with like, Customer report something. Go view what they are saying. Customer reports on the go. Add yourself to the book. Go view what they're saying. Like, that's where it starts. Do you mind? Do just. I just want to, like, even though I've seen it before, but just to see that as example. So. Andre Valencia. In this case, just based on Chris's last response, this looks like it was a. It was. Let me zoom. So in this case, Underlenji. Is asking something. When I was coding. I cannot find the following transaction. When I confident you send the message to without any action basis with these automatically matched. This is just like a product request, but let's see. We can use. A lot of the things we get now are much more product. As opposed to bonds. It's kind of nice. But, like, this is a good one. Of my transactions keeps failing when I try to sync with intact. I'm not sure. Why it's failing. It's good. 39 GB. I could figure that out. She said it was considering Maggie Beerman. It's also if I go to the URL. It shows which page they're on. As part of the URL, there is an accounting book. Highlighted there. So, like, I could go here. In this case, I already have access to it. But, like, worst case, I could be, you know. Copy that. ID go into the admin dashboard. Go into books. They like. Great. Go through mackie bureau. Okay? From there. Now I have access. She said it's in transactions. This is my point. Because I'm on. The demo account. Okay, so there. There's an example. If I went in, it probably wouldn't let me know. See it. I would have to add myself to the client. I do have Elijah, on the basis at this point. To upload an email is still much better specifically invasive. I should update it at some point. Doesn't remind you. Get over in transactions. She said specifically it's about someone failing to sing. So I'd be able to see that in recent things. In this case, we fixed it. You know, last week. Sure. I'd be able to start investigating from there. I would also in this case. And I get. What'd you do? You literally just took the customers, looked them up and retool and grab their. That was just the starting point. Which just because from here if you didn't say it's on good through Maggie Beerman, I would have to go have to know based on the page gotcha. In this case, I also would be looking at. Amy tome. Who's amy tome? Her email bought a deal. Know. Hardly wanted to be a firm. I could have also looked at. That moment, she's saying something is failing. I could also, like, hey, did we get any failures at that time? Here's the failure. Fill in the first prediction, which is the information about specifically the error she was running into. That's one thing I could do to investigate here. If there is. So we send any 500 just about. Any unexpected API failure. For specific other failures to alerts bad. We also have it set up to split out two. Also send it to the alerts. Firm bad. If you want to see something a little bit more specifically. Most of the time, people are just an alert fan, but it is nice to be able to, like, oh, something happened for Bonadillo. All the bad ones there. Yeah. Everything end related happens here. That's one place you can look to see you know what's happening. The other place I would look, I have access to it. So I'm viewing what it looks like in the ui. Internal alerts. Currently it doesn't. Look, all of them are invoiced. Alerting. Okay. Which works. It works. There's no great pole system for being like, what world the alerts related to this book or this account? There's no great system. But you have it. You can do that inside, right? The other thing I would do is. You have it for the Bonadilla, not for the. Yeah. At the front level. Not for the book level. Yeah. It's also like, if I'm. Yeah. Yes. No great way to search across all of that or log however much is happening. Currently. The idea would be like customers running into an issue. We logged in as a ticket. That's, like, our form of tracking. But there's no good way of being like, this is. I mean, this is kind of part of, like, telemetry and all that. Where it's like, here's all the alerts we're running into. Here's our prevalence. Here's how they've gone down over time. There's no great dragon. The other thing I would do to figure out what happened. You know, the first part of your. You know what needs to be a fix? If needed. If I know, understand what's happening. If what they're saying is confusing. Session replay. Solid fine. I would find any tome. One from eight months ago. Maybe that's. Awesome. I could then, you know, watch exactly what's happening. Yes. See what she's up to. See what, you know, she ran into and also see what network error she had. But you're getting a lot of the, a lot of the, I mean, any of the, like, really bad network errors we'd be getting alerted about, but maybe there's like something that, like, is expected error that we only flag to the user. Just to get a sense of, like, when they're saying this, why are they saying all of this? Yes. Yes. That makes sense. Yeah. On the investigation side of things. Realistically. It's just like I'm using GLFI accounts for investigation. Using. Files for investigation to download the file. Otherwise. Ui. Just going straight to engine if it's something bad enough. Use. Okay, so glfi accounts and files. Yep. Cool. For the investigations. Cool. Okay? Should we move to a different retool? Yeah, I think that works. Investigation. This is actually much better for investigations. Mesa. So I'm a diaper. Where we take actions on client books. With some other random things thrown in there because there wasn't a good place design. Specifically where we investigate vendor data. So again, similar to a lot of the regional this is like search for a county book at the top. And you'll see a few different things. For any of these, so we'll stick with Lauren. Basel 24 Trust. Let's do. Dan. We'll notice they have a finicity connection, they have a Quickbook selection and they have a box connection. So I'm starting with the QuickBooks connection. From here. And just to be clear, the vendor data one is to give you like the full view, but then you specifically move into the molar, has each on them. And then it's more. It's actually kind of interesting. It's more specifically around one specific thing, which. Is ender Object conversion to client object conversion. Okay? Don't really use this that much. Most of the time. All of that. All of that's working. There's this concept of, like, you get the vendor data and we have to convert it into our standard basis data. Yes. Something wrong happens there. You can kind of pick it up here. Like, maybe if they report something, maybe that's where somebody. That conversion, like, we got the data and we didn't convert it for 17. Sure. It doesn't really happen too much normally. There was an issue. But technically you can explore the it's actually pretty nice to be able to say, like, here's the better object in here's the client object data. What's going on here? Pretty nice. Currently. Like, if you watch Neville debug things, it's. It's a lot of hopping around the database. Between vendor optics. Client objects, basis objects. There is a. There is a world where, like, you want to be able to explore that data better. What's really helpful here. There's some information about, like, journal entries. Accounts. It just like general, like, knowledge about the. Account connection. But the really big thing is the like pass through for like able to query the same party system directly. Very useful. We have some standard ones. And then like, just the generic query. Very helpful. Being able to just query the third party. You can do it through Postman. As well. But having some standard ones, having, you know, the ability to. Generally figure out, hey, they say this thing is in quickbooks. This thing isn't like I'm not seeing it in basis. It comes up. It's a very useful thing to be able to quickly be like I've seen in QuickBooks. I see what they're saying. I see it, you know, I see where it's not in basis. And figuring out why. And especially has been. A very big thing. With using merge. Now. I mean, we're getting off. But like, there was for a while. User would be like, this thing is missing, or like, I'm seeing this. Like there's some data issue, and then it's like this long chain of. Inherent inheritance. I don't know what our chain of custody where it's like, is it in qbm, right? It's there basis. It's not there. Converting client object. Oh, it's not there. Is it a merge? Oh, they're missing it. Go. Yellow merch. Yes. Like, just like identifying, like, where in the chain. Did something break? Yes. Was always fun. Even without merge. Like, hey, here's. Like User says it's missing. Here's it. Is it in QuickBooks? Are they just lying? Right, but it happens sometimes. Did we ever even pull it in from QuickBooks? Did we pull it in and didn't convert it? And opponent didn't convert it, but it's not showing on this page. We were just removing one. So being able to, you know, explore the connection directly, very, very useful. Yeah. Extending the amount of, like, generic queries we have that are very useful. I will have to say I've gone in way too accustomed to using Merges API tester. I should be using Postman a lot more, but I got very used to just doing it in Merge because it was just like a couple steps quicker to be like, great for this account. I'm ready to go. Instead of going and finding the information. Needed to set it up in Postman. Just set up a queries. Yes, that makes sense. It was just. It was user friendly. Yeah. Fila also very, very useful. Similar ideas. The similar idea. So this is for bank account s very bank account s directly. Very, very useful for finding out, like, here's the status code that the bank account is giving us if we try to get transactions for them, or are they giving it to us right now? Very useful identifying. Like, again, if there's some issue. Where in the. Where in the chain of custody did fail? Are they not giving us the right data? Is the account, you know, disconnected, and we didn't pick it up. So, like for whether it's connector disconnected, I could say how this would tell you pretty quickly. For whether it's missing, like one transaction. How does that. Not easy to. It would be. It'd be our system missing something like ohicity. If I had finicity. Right now. Transactions up to the 10th. Like if our system only had transactions was up to the 9th, then I know that somewhere in our system, we failed. Okay, so you go off the created date there? Yeah. Cool. Or the poster posted data. Yeah, because they're typically gonna be representative post date, but the created date lets me know. Is this actually working? You know, if they say, like, hey, there's, like, a one day delay. In this case. Yeah, there's a one day delay. That's correct. Yeah, makes sense. Object storage. I know that's a user that much mostly because I know what thing is. But the idea is that you throw in a random. You're throwing a random idea and tells you which idea. That. He tells me, like, oh, this base is object. Here's like, the chronograph, et cetera. I think that's what I know. I haven't done this in a while, mostly because. I have a sense of what I'm looking at, but. Things are, you know. Being able to know what ID you're using. What id you currently have? Gl investigation. Sounds like, kind of weird that this is here because this is our data. But you know. This is our new. Oh, it's in this. Oh. Interesting. Is this investigating the vendor object data? Under object for journal entry. B didn't know that was there. Ok. Useful and for different ways. And direct integrations. This is like you guys have built them instead of using a third party. Yeah. So, Box, you guys built your unboxing? Build one box. Cool. Though this was never finished. Anyway. Really use it for the QB pass the Kibo 0 sage pass throughs. Use it for, then connect. There's also one thing we can do here. Which is spinicity refreshing. Transaction one today. Did you have to complete two refresh transactions? The explicitly say, hey, we prefer if you don't automate this. But we do allow it can be triggered from here. It is useful. In situations. Interesting, okay. Very cool. Cool. Investigating third. Party data. Ergo investigating our ledger data. 2022 ops. Ergo tools. Yeah. So this is around being able to just say, like, hey, for this book, pull in all the journal entries. To be honest, this is also on the UI nowadays. The ledgers tab. So maybe I'm not using this as much. Because it's on the UI a little better. Account types. I did use this occasionally. Not that important, but the idea is that. We have this concept of, like, some type opinion. That comes up occasionally. It's pretty. Yeah, I mean, it's pretty well defined, so it doesn't really come up. But we do have an assumption of, like, this account is a cache account, we're going to include liabilities. Can we make some assumptions based on. So these tools are for, what's the, like, purpose of ergot in general? Yeah. Investigating our ledger data or just like instead of investigating, just viewing our ledger data? Plus our account data. And how does this differ from what's in the customer dashboard? Like, what's the distinction there? Almost every. It just existed before. Okay, so this theory could have been. And this could have been a tab in the customer dashboard. Yeah. Oh. On the YUI or in the admin? In the admin dashboard. Oh, this could have been a towel. Yeah. Okay. I'm just. I didn't know if it was, like, a separate place. Okay, just because you don't. Actually, there's very little change here. You're not etsy doing anything here that's gonna affect the customer. It's just a place that just like, quickly get some information. Again. All of this except the Contents tab is also on the UI at this point. So it's not really. Exceedingly. Pretty low priority, but it does exist. What's. What. 's Account types. Account type. Yeah, so that's what I was saying. Where. Let's continue. For something like. Investment in Machobia. We make an opinion that this is an investment. We kind of make, like, a standardized opinion of what the account is, and then we do some work on top of that. We also assume like, hey, is this a financial institution like USB, USB353? Great. That's a thank you now. It's not the most important thing. Theoretically, I could change it here, I guess. I kind of forgot about that really doesn't come up by, like, every. It's come up, like, once in the past four. Months. That was, like, great. I want to take a look at what the account type is. Gotcha. Those are the main ones. And then also more recently is usage metrics. Which is. This become more important on the GI side, where just like, wanting to be able to come to every meeting. Like, here's how your people are doing. Just finding more and more need of that in this one's called sandbox. Elijah. Tanya uses measure, uses metrics. There's also usage in performance, which also has Billy Ellen. Is very important. And then, yeah. That's right. Yeah. It's funny that it's in here. The funny thing is, ISI didn't make any of these. I was just like, here. This is a place where you can do it. Because for whatever reason, the person was having trouble making their own resources. And I showed them a little bit of how you build something ritual. And then they went off and ran with it. But, yes, becoming more and more important. Especially post violent deployments, being able to say, like, here's how your users are doing. I'm like, these key metrics. And what you should focus on. And also just give a second. Here's a person. There's a lot more. There's a whole bunch more that could and should be done here. That just really no one has had the time to. And what are the. What's the issue? What's the data that's showing? Yeah. So it's beneath the, like, description of what's being shown in these columns. How long something remains a prediction. Before, you know, going into your feed. So this is. Or maybe you said in general it's a usage data, as in, like, how people are using se. Yeah, it's just like. Yeah. Why is this different than, like, what you might look up in. Do we use first type for analytics or. No. We don't use it out that much. Okay, do we have any tool that's like our customer analytics dashboard or. This is it. This is what I'm saying is that there needs to be much more. Okay? If you want to do something that will make the entire DI team happy. A good reason for that is until April of this year is not a thing. Yes. Matt, myself. Luke. Yes. If you really like. I feel like, you know, everything changed from, what, April to now, right? I mean, it was, like, five people, and now it's 40 people within, like, six months. Well, no, it was not for 10 people. I don't know, like. April 2020. It was 15 people. Update. It was like 14. No, in January it was like 12 people. So before the A, it was like 12. Yeah, before the A. And then raise the eye. Anyone from like, 12? But it's 12 to, like, 15 in the next. 12 to, like. I would say like 20. Okay. Over the next. And then I think everyone in. Like April. Since then, yeah. Okay? Between. Yeah. Beginning of this year, April. A bunch of people join the engineering team. The entire yit exists. So one of the things that. All of us would love. And that, like, if you cream, for example. I was helping him with this a little bit. But just a full, like, list of, like, here's all the metrics that we would like to be showing. Using internally. You should get the eternally mostly just as a deck right now. Than some will have to build up the query. We might try to. Help. The first aspect of this. But. Usage metrics. This users in performance was more so. But like we've never had. But do we have it in the database or, like, we just don't even have it? I mean, the data's in the database, but it's not like, the views or not. Built in the database. They're just like SQL queries on top of the data. Base. But, like, what about, like, something like amplitude or something like that, right? Like, I know you're familiar with that, okay? And I can also confirm postdoc the first, like. Yeah, post algorithm. I mean, there is. Two years ago. Eight years ago. And then this. This was me eight days ago. Okay? And I guess it doesn't matter. So, like, okay, basic questions that you might want to answer. Like it doesn't really matter, you know, it's not like a consumer app, right? But you'd probably want to know, like, how many people within a firm are using it. Like that's something you guys have access to. Yeah. I mean, the thing is, all the data is there. The data is all there and all it gets access at different points. Those are just like a consistent there isn't a consistency. Yeah. Okay. In the deck, though, that you and Karen put together, there's, like, here. If we would like to know these information, okay? Like, the various things that we're not tracking, we really don't have a good way to interact and, like, understood. And I agree. I mean, brother, I came from again, E person startups are like, if anyone came into the aura, it was all the same answer, which is like, hey, why don't you do this? It's like, yeah, well, it'd be nice, like, time. I'm not, like, judging. I'm just trying to understand if they were intentional things or not. Yeah. Yeah. I think it's also. I think it's also there's, there's more exciting things to be doing, I think, than building out, you know, user analytics. Yes. Which I think is not the right attitude, but I think it just. You have so much we want to build. That, like, at the end of the day? Yeah, I understand. So this is again, so just the summaries. This is sandbox Elijah tend to use metric. Is a couple pieces of metrics that you sometimes think a. Well, yeah, we use it somehow we use it a lot more. How is it realistically built? Tanya. Not a retool. But I told them Michael built, which is effectively. It's an LLM hook to database context that he wrote. And the ability to query the database to kind of get that additional context. Can write, you know, just generic questions. To ask it to write SQL query. It'll do up to 25 retries. And typically has knowledge of, like, whatever, say, what did this structure. Actually. Are you using Taniya? Are you using this retool to access Tan? Ja. Tiny is how all this queries were built. And then verified. Yeah. But you personally do go into Tanya or do you go into that retold as you do? Both. Yeah. Oh, for investigation is also. I use Tanya all the time where it's like I need something simple, like I need some, you know, generic worry. I need some query that, like. I just want. I want to write. I want it to be written. I don't need it to be perfect. But like I just want the data in some way and then can clean it up later. What would be something you might throw at the tiny I just lose Maple. Let's see. Where is it? This was originally. A tiny query, which is, hey, this is from, like, three or four months ago. And then there was something related that was helpful. Which is? Hey, give me all the journal entries in our system from a QBO connection. That have a non deleted journal entry. But all of the journal entry line items are one specific thing was looking at. So Tani was able to, you know, just write an expert instead of having to go through the process of math and writing myself. Being able to prompt that into existence and then using that, maybe the query is not perfect, but, like, just to get a general sense of, like this, you know, how many of these objects, how many of this scenario exists? Cool. Okay, that makes sense. And so you said sandbox Elijah, Otani. And then there's one other ritual as well. There was a usage one, yes. The actual original one. Usage and performance. Prado6 Yes. Yeah. So these are all in the. There's, like, a prod folder. In ritual. Everything except the tiny usage metrics is that problem. And this is not the problem because Michael didn't make it. Which is also why it's nowhere as need. And let me ask. There's more than just those. I mean, you showed me 1, 2, 3, 4. Like, there's other prad ones or people using those. Oh, there's one more that I would say gets used pretty consistently. And then which ones are. Task create gets used during how it's a good amount. Where this is internal tool, where you're able to fill the file. And have. I could have, like, an early version of the agent. Identify and create your checklist for you from some, you know, I wouldn't have previously. And the idea behind this was like, let's rate this as a ritual, as an internal tool, get some learnings. Eventually built this on with the product where being able to just like, here's my, here's my file here's like my previous checklist from other some other system build them basis. That's the point. Of this. And this one gets used a lot. Built as an internal tool. I think it's, you know, there's parts of it a little rough around the edges, but good learning about. Like, is this something that, like, we should be building up to the product? Which. Nice, okay? So this is. You said it's for demos? Mostly for pilots. If we're making it easier on our pilot users of like, we'll create a checklist ahead of, ahead of time for you. Just to make the transition quite easy. Make sure that this group gets a sense of like. Here's what working in basis is without any of the set, as little of the setup as possible. I see. So that you know you can. It's the proof of concept of, like, work basis as opposed to getting set up in basis. Makes sense. Okay. And so. Yeah, and so then the other prod ones you guys don't use, let's see. I would say monitoring is also good, also kind of similar. It's specific. Metrics. About a book. Really much less important now. Most of the metrics were. Most of the things were like, oh, these are common problems that we know can happen during onboarding. And, like, way too. Check on that. At this point. All of those problems have really been. Involved in all the kind of wiped away. It's still used for measure and. It was various for a while. It was also kind of like the original. Section. How many books does a firm have where they are at and actually getting set up? But it's really. That's mostly like the technical setup when you use usage monitoring to see, like, are they actually using your client for more. Like, this was just like, are they technically set up and then are they using the platform more Risk uses your monitor. Ing. I don't really use this. Much at this point. I don't know what that is. You can figure out? Not sure. This one. And then where is. The. I would ask him that where she typically is making templates. Where templates are typically made these days. Is one of the reasons where they can see for templates. But I haven't touched it a while. I'm not sure which. And the other one's like, hang on, I'm not gonna do this tomorrow or anything, but just in theory, if we archive them or put them all in some other folder, like, no one would notice. End of the documentation is fun. Which is. Back in like last November. In preparation for people coming on board. Created just, like, overview of, like, General terms. What other product are links to the main rituals? That you kind of expect it to be using. A lot of it is still, you know, still up to date. A lot. I mean, stuff like, you know. A lot of the like internal terms are still up to date. Think about the products probably maybe need some updating. Do you give this to people during onboarding for the DI Team? At this point, we have some, you know, better approved documentation. So this is also not relevant anymore. Not really. Anybody else? Where? In Gitbuck or is there somewhere else? Yeah. In the. Wiki. Less than that. Yeah. I know where at times I'll wrap it up, but I'll just say it's not gonna happen now. But, like, eventually, over the next, you know, couple months, what I would love to do is just consolidate. That way, at least when new teammates come on, you'd be like, here. Here are, like, the two, or here, the three rituals. Don't worry about everybody else. You know, there's a lot of them that's like they were built to do a thing. Right. And then we continue doing that thing. We still do that thing. Or we didn't really ever need to do it again. And then it broke. Exactly. So, like, all the ones that I said are useless. I have no idea which ones are working right now, right? Then also. That's the other point. Like, then we can fix the ones that matter more easily and not wait until they, like, until they break. So. Okay, this is super helpful. This is exactly what I was hoping to get. I apologize. Because, you know, two or three months from now, when we actually do this work, I'll probably have to sit down with you again. You have to do a lot of this stuff again, but we got the granola, and so this. Is a really good picture to start. 