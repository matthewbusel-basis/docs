## Meeting
Calendar Event Title: where to put Atlas in codebase
Calendar Event Time: 2025-09-15T17:30:00-04:00
Meeting Note Title:where to put Atlas in codebase
Attendees: 
Link: https://notes.granola.ai/d/abb18092-f7fa-424f-b3b0-56a4f5f1e483

## Transcript
 
Me: But the background. Is that the Atlas team right now? I don't know. Familiar you are that list. Okay, cool. Is essentially focusing. And when I say team, it's essentially me focusing on cleaning up the docs, essentially, and just making this a place that can be easily updated. But hopefully, like a month from now, we'll have an actual team. We'll be building some automations and agents. And so Mitch wanted me to just check with you guys where those should live. I think the thought is they should live in Arnold somewhere. But where in Arnold there's an atlas holder. I think about it. I guess. What is the goal? It's just to have a bunch of documents. That are. What? Sorry. So this will be. The docs are going to stay separate in Atlas? This will just be the agents or automations that. Yeah, that are built by the Atlas team. When I think of Atlas, I'm kind of thinking. Devx DevOps on steroids. It's just like AI powered DevOps. In that sort of way, Is that right? Well, the way that it will apply to the ERS team, yes. But ATLAS will be working in theory for Di and for everyone else. And so, as an example, we might build an agent that we're not an agent. An automation that says, whenever there's a meeting, go read the transcript, summarize any action items and send them out in Slack. They'll probably be, like, dozens of them. Some of them will be very small like that, and some will be, like, more significant, like Tanya. Something being under our scope. So it's, like, suffered from the code, from the core product. How much would it tie into the CO product, if at all? I think not at all. At least anywhere in the near medium term. The only. The only time is that it will. These agents automations will be using the code base of the core product as context. But not interacting with it in any other way. I don't think. It's just sort of reading. It doesn't need like, say, like a data model definition. Well, so loaded in memory. Right, Right, right. It might, you know, make little updates, you know, comments and PR, like we have GitHub actions right now, things like that, you know. I think your separate folder, top level, sort of like caviar background. Find out secret. What would you think of? I think the only use kids would be the worst with Asian may import. Things from atas. If, let's say we want the agent to be able to, like, answer question, use information. Such as, like how to navigate business app or something. But even then it would. It would go to the other. The, like, Atlas documentation folder, not this Atlas folder with all the agents, right? Is there two elements? Yeah. So let me. I'll just share the distinction here. Yeah, there we go. See if we can get this successful. All right. Input. Nobody. Spent the wrong one here. We go. So. Yeah, so just say there's. This is like Atlas, which is like separate sibling, you know, repo to Darnold. I expect this will continue to be here and be separate. From what we create or decide to create now. And so to say that, like, if Workspace wants to pull from this atlas, like, I think it still can, it's just a different, different thing. Okay, so this is one of them. What's the other one? And then the other one doesn't exist. But if we just. If I go to, like, let's say, open up Arnold here. Wherever you guys think it should exist. I think the idea is to have another sort of Atlas folder somewhere here that is just for creating Atlas agents and automations. So it's not the docs. It's just that, like. But what if I want to use the information in the docs? Then I would say you go to the sibling repo, the other one that I was just showing. Oh, but I don't think working. Oh, I guess. Then we can if you make it a sub module. I mean, we could move. We could move that other one as a monitor, like, all into. Arnold is like, one. One Monterey boat at some point. Why do we need two? I. I have no, like, attachment to it, just how it is at the moment. At the moment. Yeah, yeah. The purpose of this meeting is trying to say whether we move that completely China. I was thinking just purely of like, we need a place to have ATLAS agents live that are in Arnold. But if you're saying, hey, let's just bring it all over, I think we could potentially get to that Asian. Dude. As of today, nothing. They don't exist. In the future they will basically use the code basis context and use these docs or the doctors are showing us context to run automations or simple agents. So in the example I gave before was like, you know, we might want to say whenever there's a meeting, you know, read the transcript and then send Slack messages automatically to the people in the meeting. Right. Things like that. Or it could be something like, you know, whenever there's a pr, read the VR and then. You know, suggest comments, right? Why is it connected to like the documents? If it's. Let's say, if there's a meeting. Why is it relying on GitHub? Is it writing the meeting transcript? So we. Yeah. Let me just make that example. Go open up this folder again. So we are about to. Very soon have a historical information folder and granola meetings folder. And so every meeting, no tool end up here. We could also talk about, like, if that's a good idea or not, but at least that was sort of the quick and dirty way to just, like, get meeting notes into Atlas. Seems reasonable. And so another example, like linear would be another one that hopefully will do in the next couple weeks, which is like, we'll bring in linear projects and updates and things like that. Okay? So what are the, like, components? Of Atlas, so we have internal documentation. External documentation. Externals like things so that we should, like, affirm. Yes. Let's help. So just to make it, like, very visual. This is the information that's in external. Okay? Internal is. I don't know if you've gone to Gitbook, but it's. Internal is. Are these docs? Which need to be cleaned up, but essentially, right now it's mainly DI docs. And then the third one, which we're, I think, roll into internal, is Matt has published sort of this wiki. With, like, team information. I think, to me, I don't see a distinction between a wiki and internal docs. Like, they seem like the same thing. So I think I'm gonna roll that into internal. So internal, external, and then we have like, all the automations. Whether they be, like, schedule tasks or, like, trigger it or something. Yes, that don't exist yet, but yes, exactly. I think that should all be in the Arnold. If we want to use them. And say easiest way. In a submariner. What's coming? It'd be really cool to, like. Let's say we go in a meeting. We're discussing something technical, and then we say, hey, reference this granola. Go into my name. Yes, that's. Nepel's vision is very similar to that. Exactly. Where should it just be? One big atlas folder. Yeah. Is that right there? So is it the same level as, like, backhand as. But I guess you got it. Can the agent importer. Let's say if the agent think back in the agent. Is it possible to import them? It would not be even possible. Then should it be better? Yeah. That's the interesting thing. I don't want a bunch of granolas in the back end. But I just. It does make sense for the agents to be able to access them. Yeah. Otherwise, how does the agent you write to it? Eject right to it with our agent right to it. Or Atlas is agent right. To it, I think. But you've at the stage. Also. Oh, you see? Or anything that's shared. You will need to bring to you, I guess because right now in the backend we already have like core context, which is just prompts and things. I guess this information about the code base. Can kind be treated as context as well. To say it under core agen t context library. So actually, I have a bunch of content there. They're all just like markdown facts. Interesting. Then it's because you retrieved there is like specific. Accounting information. But this is stuff that's, like, displayed in the product or no. So the agent would choose what to inject into the agent's context and I guess. So even if we have Atlas folder, I think. We probably give some access to. Always select some folder for the agent to be able to. That's interesting. But I'm also OK if it's all said beckon, as long as there's a way to get it. Maybe like backend atlas. Makes sense. Then present. The agent can reference it, right? If it's. As long as it's in back. As long as. I think it's the easiest. But you're okay with the docs and all that stuff? In there, too. And granola meetings and everything. I actually think so. Yeah, okay. If so, just in terms of options. Third is either it's an Atlas folder within Arnold and the question is should it be at the top level or within Backend. Yes. I believe the argument. So obviously I was at the top level. Makes sense. You're the Atlas team. You have to back in team. If that makes sense. Intuitively. Yeah, but I think our argument is our agents will probably want to reference documents from the Atlas. Team, so therefore it is a part of the back end. Atlas, then. Is in the back end, and therefore you can use all the same infrastructure tools that are already there. Which might let you faster. Our infrastructure. Yeah. Yeah. Separated, isolated. Yeah. So tell me if this makes sense then. Which is until we start to actually build agents automations, or if you guys decide you want to start using working with atlas. No need to clutter the back end today. But that would be, like, where it should ultimately live once. I believe so. Okay. I think. Then that sounds like a plan. We'll. We'll keep it separate for now. As soon as we move into that, hopefully a month from now or so. We now have that. As a decision in a future world. This would have conversation would have automatically just. We'd be like, do it. Works with side to incorporate. Gitbook into the code base. We can work on that. If that's something that we want to do now, let me now. Otherwise. It's not a highest priority. So kind of moving to the Arnold at some point. Then it will make it possible to work on the other thing. It will be possible. For us to do. All right? I know everyone's pushing before the end of the quarter, so maybe we do this early next quarter. Just cool. 