## Meeting
Calendar Event Title: Onboarding - RP Process + Accounting for Product/Engineers
Calendar Event Time: 2025-09-10T11:30:00-04:00
Meeting Note Title:Onboarding - RP Process + Accounting for Product/Engineers
Attendees: Neville Jos,Connor Mann,Abigail Burlington,Jeremy,Joe
Link: https://notes.granola.ai/d/a121b2a8-6243-443b-bf57-c53d45a0648a

## Transcript
 
Me: We've been integrating those into the boot camp. So we did do the basics of what is accounting, what is a journal entry. You didn't build those things. Did you do a fish market or. We didn't check this market. Now, you didn't do it that way? No. So we just kind of presented it on some slides. And then what we did was we pulled up an instance of QuickBooks and kind of showed what are the accounts and actually does within QuickBooks. That kind of show the pain and that we did it from the basis perspective. I like to do the 100 at some point. Maybe as part of boot camp or. You said you have slides. Yeah, we have slides. Do you mind sending them? Yes, I can send them over to. So then they'll just do maybe the 100 part and then. I like that fragrance. From a product perspective, it's more of a product engineer. Actually happens. And then we'll just skip the journal entry point because they've seen that. And then the other thing, which is books, clients, entities, that relationship. Did you guys cover that? We didn't. So we have been in our slides, but we didn't get to it in the boot camp. Okay, maybe we'll cover that. Okay, we'll do 100, cover some of that. And then we'll do. Okay? All right. I had, like, white parts. High level. The review thing's happening. The first thing I'll say is that accounting has been done. I've mentioned this in people's interviews before, but I'll say it again. But accounting has been done with the assumption that people would do account, like at every step of the way. They thought, oh, okay, we would add more people to this process. If you think about accounting as a big assembly line, You hand off work to different people at different stages until it's done. Or whatever. Handing off your shoulders and other and then the amount of accounting you could do when you can someone grolo this can you grow? I got a perfect. So the amount of accounting you do linearly scales with the number of people you have. So you build a bunch of processes. And systems around that assumption. And then what traditional AI accountant or AI companies do. Is they come and they say, okay. I'm now skating the format a little bit. I have done this in a bit, so I'm trying to do stuff, okay? So you said. This is the assembly line. It goes to here. This is Joe. Joe's into Sally. Some work happens, okay? And maybe kind of looks like this. And traditional AI companies come in and say, hey, this part, which is the AR billing whatever part of it. Is slow. We're gonna make it faster with AI. Different companies, come into different sections and say, we're sticking AI in here and we'll be great. We love it. We'll make this part of it, like, 50% better. Or something. They get really, really good at this part. And sort of they have all these other things and they build these AI for people to use it. Now at this stage, as you saw people at the stages and all this stuff, and somewhere in the process you get a little bit of AI. They can see those two products in here. Our thesis goes very simple. This thing called AI is just this intelligent being. And you can print, like, 10 million of them. Instantaneously. Would you even do it in this order in the first place? You have an opportunity here. To say, well, if you have 10 million AI working all at the same time on your books, Let's just imagine for a second. Does this order even make sense? Would you want to do it this way? We think about from a product engineering perspective about accounting is that we're at the precipice where we say, what do we want this profession to look like if every single part of it was filled with AI? Like, how can we rebuild it from scratch with the assumption that every single part had AI? And if you were to think of it that way, would you even do all of those crazy stuff? What would you do? Something else. And that allows us to be very creative and have a lot of fun with it, because we get to say this is what we think the future of AI plus accounting looks like, as opposed to being confined to the past. About what it has been. We have an opportunity to be like. No, we think it should be like this. Whatever that means. So that's where the work gets really fun. And exciting and awesome. So to do that, we have to have some understanding of accounting, not in the way that it's done today. But why it even exists in the first place. Like, what's the point of this thing? These people exist and get the money. Why do they exist? Who cares? And if we can connect to that goal. And say, okay, as long as we achieve that point, then however we achieve it doesn't really matter. We can do. We have infinite permutations or methodology of ways to get there, and we have ample space to do that as opposed to confined this object. Fair framing. Today. So with that. In mind. Talk about what the point of accounting is, a firmware product engineering perspective. And so this is, like, a simple framework I came up with, like, a few months ago because I realized that we've been teaching a lot of technical accounting to folks. And the engineers were just not getting of account if new. Credits and debits and balance sheets, all inclusive, all this other crazy stuff. But why do any of it? So the example came up. But is that. Imagine it's the 1500s. And accounting hasn't been invented yet. Okay? And I'm trying to. So there's a moment, Sally. And Sally sells fish on the side of the road. She catches fish, she sells fish. And every day and she makes a little bit of money. And over time, Sally was able to expand her business. So now Sally has owns a whole fish market. And there's all these little stalls in it. And different people sell fish. And that they catch using, like, big boats. And stuff. I don't know. Have you draw Boligan? It was like this. There you go. Okay? And then they come in and they give these people fish. And Sally owns the boats or maybe run some or whatever gives these people they sell fish. You know? And then Sally makes the profit. Okay? And what sadly does every day is she walks up and down. There's a fish market. She walks to the boat here, she doesn't actually do the job. Two box she talks to folks. Question is, what does Sally thinking about? As she does. That. How much revenues she's generating from these folks. Yeah. Making money. What her costs are. Anyone stealing from her. Yeah, that's a great one, stealing. Who's lying. That's a good one. We'll actually touch up that much money. She's like, how much money? Yeah. Subtract these through. You know, some member of the boats. Just like how they're depreciating. Might be like are both broken? Are the most broken? Are they fast? Are they broken? How about like which fish is good business for business? Right, like which fish is good? Like, maybe. Which fish? I don't know. Maybe I should sell more st and, like, not sell as much tuna. Whatever. Like what? Should I catch even what matters? Like you know what takes my time and where should I focus my energy? These are all reasonable questions. Let's take a sample question. Like which fish has sold the best. It's the 1500s. Okay, Just imagine that for a second. How would Sally go by answering that question? Like, literally the steps through which she would have to do that. She could ask each individual stall person which Colorfish has sold the most today. Well, that would be today. I'm saying the last year. Oh, in the last year, yeah. What's been great for my business. In the last year. Like, you used your last year to be like this. Aggression. Focus. Next year. How would she literally do that? Records. Jeremy records. Okay, so she would go to the record. S. What are the records? There's these, like, maybe there's some books. I think that's the book. And there's a bunch of books. And maybe they say, like Jan and Fed book at March. She has all these books. What would she have to do in order to answer the question which fish sold the best? Like by looking at the records that already exist, you're saying. Yeah. Add them up over, like, you know, bring them together into a annual situation. Yeah. How would she literally do that, though? There are a bunch of books on shelf. Pluck every book. Flip through every page. Write down and then write down. Seven. That's literally what she would have to do in order to answer that question. Which holds how long do you think that take her? Days. Yeah, Just to answer one question. Now she can flip that question and say, who's my best salesperson? What would she have to do? Go back to the front of the book. Start flipping through it. Again. Every question has this nature of going back to the book. And flipping through it. Which is extremely time consuming. And she doesn't have time for that. She's gotta yell at this guy. Kicks the boat and does that make sense over as well? So Sally, you know, Sally is gonna ask for help with this. So she goes, hey, can someone help me? B. Just a question. Answer. I have all these questions. And I don't fucking time to run around looking at books. We'll summer that and some guy shows up. I want to make a name, Joe. And Joe's like, I will be your question answere r person. You will pay me. To answer all these questions. For you. Great. Sally, iris, joe. Ask question which my best wish what does Joe have to do? The exact same thing. Sally's happy with that. Like every time she asks a question, it takes a week to get an answer. And she's a bunch of that keep coming up with them. If Joe took all the question Sally had and tried to answer them, it might take them six months. And by then the answers might be outdated. Or something. And so what does that make Sally feel about Joe? Had a job, but so Jo can't do this at some level in order to do his job well. We should do something different. What could joe do? In order to be a great question answer for Sally. Just come up with a name. How the AI agent. What would Joe have to do? How could you be good at your job? I mean, he developed some sort of intuition and then sort of give a general sense answer. That'd be quicker. Yeah, but that could be wrong. I could be wrong, right? How we even build that sense. By. Really? By reading books? I have everything already pre calculated, Recalculated. That's a good one. Right? What should he recalculate? Whatever financial. Well, you know, statement stuff. You're jumping to what accounting is today. I want to stay away from what account is. I already get there. Almost. I want to like regularly. There's all these numbers pre calculated. Yeah. Becomes closed. I already know it. So I don't have to go back calculate again. Yeah, exactly. Things are precap. Pre. Calculated. And even to calculate something pre. You know, it might be helpful. Like one, I think retail question. Good. And what do you pre. Calculate? Well, maybe you can take the list of questions. And say, I will always have an answer for these questions. I'm pre calculated, right? Now, in order to pre calculate them, there's kind of two things that have to happen. One is that as you get new information, you have to, like, add it to your calculation. But all the old information. Also you have to go back and add a tip of cow fish. Also you have the right. One way to think about this. Is that now? One way to help this is. You can imagine organizing this books with colors. Color coding stuff. Or you can flip the records. Right now. Right now. It's by jfab march, but you can imagine having a book by fish. One for salmon, one for tuna, one for whatever. Or a book by person. By Joe, by this. So they fill it out. So through some organization of your records. You'll be able to answer questions very, very quickly. You don't have to pre tackle because what if your numbers are wrong? What if you miss a day and all that stuff. How do you go revalidate? Your math is right. You need to be able to go quickly, go back to your records. But if you were able to sort it in some way, As you were entering it in all your old books and sort of live in some way. Then all the calculations wouldn't take too long because all the information is ordered in some way that makes sense. You can imagine like, a bookbinder with, like, little files or. There's a lot of ways to do it. I'm not here. To say what the organization strategy is. But I would just say that there should exist some organization strategy. So that question answering is very quick. Right. And even if your pre publishing for some reason you like forgot one day to do it and your math is wrong, whatever, you could find those records very quickly. Just all the salmon records are like next to each other. Or something like that. How does that sound? S okay. So this gets into what we think are the jobs of encountered, which is one. Write down. What's going on? In an organized way. So maybe we can say, like, organized stuff. Maybe that's what I'm changing my. I'm still playing with the framework. Organized stuff. Write it down somewhere in some organ. If you organize stuff. In some way. Shape form. I'm changing the framework. I keep on vacation Analysis I know this is a right now the first step is organized. Still playing with it. If you organize information, you are able to answer questions. For you. And then you get paid your money. Because you're a good organizer. Of information. Great. Let's talk about St. How does Sally know that Joe's not bullshit? Like this is some guy. What if he's cooking the books? What if he's stealing from you? Who's this guy? How do you know? Joe's not lying. It's the 1500s to everyone stealing. Boolean, so whatever. Depending on how it's organized, you could go find a way to chuck any, like, a smaller piece of it. At least. So taking like if you split it up by stall, right? You could spot check, sort of go talk to the person that and just see if they agree with those numbers. Right. Well, how would that person even know that that's true? Yeah. They're not recording it. Maybe they are recording. But they recorded Joe's using the same record. Internally. Consistent. Truth. Now their relationship depends on Joe's ability to prove that Joe's not lying. Yes, Because Sally comes in and goes, you're stealing from me. And Joe goes, I'm not. And go prove it. That it's like. What do you do? To produce evidence? Yes. You need evidence. What's good evidence. Yeah. Like, for example, I jopen come in and say, hey, by the way, Connor, you owe Connor. Ten thousand bullions. The book says so. I agree. Connor deserves 10,000. And Connor comes in and he goes, yeah, totally owe me. You don't remember we, like, again? We weren't drunk at a party. No, I don't know. And so how do you know if Joe's not. Connor and Joe are canoodling. I don't know what the word is. How do you know that they're not includes that before you know and they're trying to steal your money you need like corresponding record of some kind that there have to. Be some paper that, like, has your signature and, like, Connor's signature with that, like, wax thing. You know, with the stair that's yours and his or whatever. And you go. No, this is the paper. This is why I'm not lying. Like, you signed a paper, and you signed a paper, and everyone signed a paper, and so that's why we believe this is true. Another way to think about it is if Joe is so right. When I count my gold coins. The number of gold coins should match the number that he's saying. My revenue minus my costs are. Right. Like all of that should add up. Now, there's an infinite ways there's an infinite combination of ways to prove that someone's online. You know, you can do look. Like Joe and Sally are best friends from childhood. Jonas, not judy. Sally trusts joe. Joe sally. Grev do anything. But if Jose is a complete stranger. And Joe's gonna do a lot of work. To prove that the accountant is correct. It'd be good for best friends to do. But so good to just do it so that you know you're right, even beyond proving to Sally. Before you go to Sally and say, hey, you should invest more, Salmon's your best seller. You should probably know if that's, like, correct. And it's not some, like, error. You missed a page and you missed a book. Or something. And there were some other hidden, you know, like in the record. One of them fell off the book. And now went under the couch or whatever. And so, you know, now you're, like, misremembering. And so if you add up all the records, then it doesn't match the bank. Then you kind of know something's missing, your book is missing, or some money's missing or something's. Gone wrong. And so you build confidence in yourself. To prove yourself. Okay, so the second job of an accountant. Is to prove stuff. This ends up becoming a lot of the work. This also matters if the tax man shows up, says you owe tight tights. And the guards show up or whatever. Or in modern cases, auditors show up in a public company or all these other people show up. It's helpful to prove as you go. You have a stamp from Connor. Pick that thing, staple it into your book. You have a bank? Bullion, whatever record. Staple that into your book. Just start. Anytime you have a PCF is just staple it next to the thing that you're doing as you go. And that way, when anyone comes and says, hey, can I see the books? Next to it is every staple, picture, evidence, record, whatever. And so that way, you know, hey, if something's happening, I'm clean. Question so far. Okay? So now what do you think Sally and Joe's relationship looks like? This relationship business. Good. Great. Yeah. He comes and he organizes everything. Great. Even now, like proves everything. So I'm like, I have confidence. In what's going on with my business. Confidence in him. I like this guy. Joe, he's great. Okay? And then you become friends. This is part of the county, you become friends. Now What Sally trying to do? Sally on this side? Why is she asking all these questions? What's the point of asking the questions? To help her business. Yeah, she wants to grow her business. Right. She wants to increase her revenue, cut her cost. She wants to sell the best fish and buy cheaper boats. And whatever. As Sally know exactly what to do in every scenario. Oh, but there's someone who knows your business just as well as she does. Who studied it, who's proven it, who knows the full thing. She asks Joe for advice. Or friends. Say, Joe, what do you think I should do? Joe's like, oh, man, I've been looking at this all day. I think. First of all, you got to get rid of this boat. It's broken. Stop doing it. It's not worth it anymore. And I think we should expand the northward. Okay. And, Sally, like, kind of trust this guy because he just did all his work. He's proven himself to be trustworthy. And so now. Sally and Joe are like quasi business partners. Quasi. Right. Joe just getting paid way more money than here at this stage. Just organizing stuff. Great. You get 10 points proving stuff. That's a huge headache of my back right now. I have a lot of confidence, get paid way more and you get the most much for fan view work. If you help double my business. You get some huge percentage of that. I know Joe also wouldn't do it. Joe wouldn't help unless there was some incentive to do it that way. Right? Like, if you're still getting 10 million, probably to give all this amazing advice. So the relationship transforms over time from like a Randall worker to like, a strategic partner. Over time. And the amount of money goes up for Joe. This is what we think. The profession of accounting looks like in a very, very high level. You organize information, you prove it, and then you get to lose out if you want. Oftentimes, today's accounting firms are stuck doing one and two all the time. Free is their moneymaker. But all their people are structing one and two. It's one or two takes a long time. It takes three weeks to do last month's accounting. On average. You can't. If I'm wrong in any. So you're just in a continuous cycle of organizing information for me. Organizing. And you don't get to do strategy work as much. And this work sucks. No one likes it. It's very painful. It's very manual. It's like, oh, my God, there's a $10,000 missing. Now I got to spend, like, six days looking, trying to hunt this down and whatever. What just happened? You know, why is it snow netting out? Why is my balance is not being zero or whatever? The question is very annoying to do this work. And so people hate their lives in this, but they don't like it as much. And some people like it. They would like to investigate violence. Et cetera. But strategic work is where all the. All the money spent. You actually way better fees and the work is way more creative position. Al like correct answer and strategy works. Should you expand Northborough. I think so. Like, it's not like there's some data for it, and there's some. You pull in information you collected from these two parts. To justify that, but you don't actually kind of know that to be the correct move, like, objectively. Right, but it's a very more creative part of the job. So the pitch of basis is very simple. We will automate one and two. For every accounting firm to the best that we can. And we will help answer any question in regards to part three. Now we can't actually do, partly because that's a very contextual. And also, like, it's not. I don't believe there's a correct I could ever say with confidence, you should expand northward. Okay? It's a lot of intuition. It's a lot of human stuff. It's. A lot of. I feel, I don't know, it's a very vibe state. Use a lot of data for it, obviously. But after you get all the data, there's just always question. Now we have all this data, what do you literally want to do? And there's infinite possibilities. In what you can do. And we say that's the part of the job that's part of the job that's very creative and very flexible. And so we automate these two, and then we help you fully on properly, and then we pitch that check on first. And then in that all the accountants have to then transform from doing this kind of work to doing this kind of work. Which is new for them. But they find themselves liking it more. Than sitting there looking at cell phones. And then every project, product, idea, all these other things, for me at least, is my framework. Emanates from this kind of conceptual model. Than it does at most. Very good. Very good. Professor, right? It's not as fun. Yeah, this is how my mentor ccp, but it's like my spoon shop. Okay? Any questions? That's accounting 100. I'm getting 30 minus one. Any questions? Content starts. That's great. Okay? What do you think? Organizer, right? I kind of like organized because writing is like organized. Organized. Is probably more fully encompassing than right. Yeah. You do? Yeah. I feel like there's more meaning than that. I want to make a YouTube video on this someday. I'm not sure game with that. So I'm like. I'm, like, playing around with it a lot. Like, I refined the idea. I see it animated and all this other stuff, but for another time, okay? So you guys did journal entries? On that. That's how you write stuff. Organized. Okay, well, we're not going to do that, Jeremy. I want to keep doing accounting 100 just to refine this. I don't know how to put that into those. We can start inviting each of the bootcamp if you want to. I'd love to do just the 100 part, and then I'LL fuck off, okay? And I do love testing because I do want to make a video on it, and I'm still playing with the idea. Yeah. The more help we could get, the better. So we'd be happy, too. Yeah. I love this. Making very happy. When it comes to the next boot camp. I'm just curious. It's going to be on Tuesday. I'll invite both of them. Yeah. Let's do that. I think we have, what, three people, five people. Very much. People joining next week. I don't want people's names. Okay, anyways. Next thing. Oh, bookstone. Okay. Great. So let's just talk about basis now, today. I'm making it up with her. Okay? We're basis. We sell accountants. To firms. Your accounting firms. To help them do work. That's how we make money. Accounting firms have clients. They do accounting for these clients? And that's how they make money. An example of a firm you'll hear is Wiz bpv. I don't really need the new ones, Aprio. And they have clients. And clients can be any business in America. It can start from a bodega shop on the corner. To a pharmacy, to a textile manufacturer, to family offices. Jeb Bush is accounting has gone on with basis. Now, for some reason. So all this stuff. So it can be anything. It's arbitrarily, it's any business. So it's arbitrary. We do pinion now. Opinion does 50% of all. 50% of all the beef. In the us is accounted for by opinion. It's so weird. They have, like, a weird. All the beef companies go to pinion for some reason, so they're like, beef experts. So I don't know why, but that's what they made their money on. So account for beef is there's some fundamental, again, if you go to the organize that framework, they're all doing the same thing, and then there are per industry and per firm and per client differences. But. Okay? So all these people have clients now? Clients organize themselves in different ways. So if you're like a multinational corporation, You're one client, but you'll have several LLCs. C Corps. S Corps trusts all these other things. That. Make up your. Make up your business. We call those things entities. Entities. So you can have different LLCs. So one example of this is that we have an Invictus pharmacy. Pharmacy and they have different locations. And each location is a different llc. That's like a simple example. Okay? Now when you have multiple. Now simple business is only a one entity. Complex businesses have multiple entities. Once you have multiple entities, you have an option. And the option is, do you want to account for all these entities separately? Or do you want to do them together? So you have accounting software, one side, and there's usually. We only support three. Software. And right now we support QuickBooks. We call QDO often zero and sage intact, which we call sage by multiply call induct. These are the three we support. QBO and Zero are single entities, so they do not support multiple entities. And stage intact is multi entity. Sage is extremely complex though, and very annoying to use. Because it's so. Because of its multi entity sport, it has a level of complexity that the other two will have. It can support multiple currencies. Across multiple nations, across multiple tax stuff. I don't fully know everything you can do, but it has, like, infinite pages, and you can study SAGE for, like, two years as, like, a college course. So most companies start off using PDO0 because they're single entities. Itself. Now as you start to become multi engine, you start asking yourself a question Do I want to use Agent Time? Do I not? Oftentimes, people don't want to use HR tactics because it's a nightmare. And so what you end up doing is you have two options. One is. The first option is you create a new QuickBooks account for every different LLC you have, or zero account one per one for entity. The second option, which we often find is you use one QuickBooks. And then you tag different data with different entities. So you say, oh, this Data is about HT1. This is what HTTP 2. Now, these support tags, but they don't support multi entity. So if you filter for a specific entity on the data, There's no guarantee that that entity's accounting is done properly within itself. You can say that the whole thing's accounting in QuickBooks is always trying to make sure that the accounting is done properly, but it can't make sure that the inter entity accounting is done properly. That becomes on the accountant. So, for example, very simple thing is ass is equal liabilities plus equity. That's like a rule in accounting, Quickbooks. Make sure that that's true. At the total level, but it cannot make that be true at a per nt level. And then there's some like, complexities. For example, there's a family office. They're not a client anymore because I think we ended up losing the master client on basis. When we start our basis, there's an inquisitor, some Ion offer, but it's like a Venice will in billionaires. Family. And they had 50 entities, if I remember correctly. Sprung across seven QuickBooks. So that's the ratio they chose. Is that fair? Okay. Now, the amazing thing about basis actually is we allow you to be multi entity for longer in QuickBooks because we can filter on entities and then tell you if your balance has met out, if there are other issues, and all this other stuff. So we actually allow you to stay on crypto as a multi decoupling. Program because we get to do all those checks automatically using AI, which is actually a feature that I think we don't speak about enough. But we have. So you don't have to go to safety tactics as early as you usually have to. What ends up happening is you have 10 entities. All of a sudden you're making mistakes because accounting is a very manual job. So you're making a lot mistakes. And so then when taxis and comes around, you look at all your entities. They're all kind of. And it's very, very hard to continuously filter out the data and then see if all of them match out or not. Being automatic enough for you. So. Each of these accounting softwares have a ledger. So let's just write down your journal. Trace, we call them. Sometimes we're ledger. We call them books here. Like it's just a book. So you can have a quickbooks. Like each quickbook's login is a book. Each 0 lognizable book and each stage intact, logging as a book. And so every client has some set of books. And these things have a weird relationship. You could have an entity, like a book for each entity. Or, you know, multiple entities in a book, if it's saved and you have multiple entities in the single book. But if it's QuickBooks, you might. You can choose either. Or, for example, we have Capital six on the platform, which is a client. And Capital Six has four entities, 100 acres, capitals. Whatever it's called. And each entity has its own 0 login, so they chose to do one 0 login per entity. But if you look at Mandy rieger, who's using QuickBooks, they have, like, 13 entities. And all 13 of them are inside one QuickBooks. Tagged with rigor. One trust fund, grandchildren's trust fund, spice something. I don't remember. Okay, so this is just some so how the platform works. Is it shows you clients in a drop down. See a drop down, call at Capital Six. That's the. If you've seen that at the top, right? Of the platform, you see capital 6. And then the second dropdown is you pick the book. Okay, so it'll say, like, something like 100 acres. And if you have multiple entities inside the book, a third dropdown will show up which will pick like which entity do you want to look at? Entity 1 or something? But these dynamically show up. If there's that level of complexity, if you are a client with only one book and no entities, then only one dropdown will show up. None of that one so short. Do we do translate like an accelerations? Yes. There's also consolidation. What happens different currencies. We do not support different graphics. Okay? Got it. Will make my nightmare some other day. Teach a whole different accounting class for that. We don't support multi card. I know there's some, there's been some multi currency on the platform and like the AI does something and people like it, but it's not like a well thought out. Currency support system, so I actually don't. Any questions on that? So that's just how our platform is organized. Because clients, books, then entities. Okay? Is that? We need a breakout quick. There's no 10 minutes. Okay. This will open. Are you on? Keep going. Sure. There's only one more thing left. Let's do it. Our RP process planning. Actually, I haven't taught this before, so we'll discover this along the way. Shop. Trying to find some framing that makes sense. Oh, yeah, I'll try. Okay? When I joined. There are four people in our room. I love being powerful. People. Across the room. That's great. Okay, now we're 40. People, okay? And along that journey. When you're four people in a room. 1. There was nothing there. Snapdrams. Everything he built was in. And easy. And simple. There's no complexity there. And if you didn't like something, you just, I don't like it. And then you change it and then release it. We also had no Buster, which was great. So nothing mattered. You could do whatever you want. As we got more customers and as we got more complexity in our products. We started to have issues, sort of issues like, hey, what do we agree we would do for this customer? No one remembered you spoke. About it. We were building a reconciliation program for last December, and I was slowly going insane. And this is last December. It's really that months ago. Slowly going insane because, like, I couldn't remember what we agreed to do. No one could remember we agreed to do. Okay? And that rather ended up being just one of the worst things. At some point, halfway through building it, I was like, oh, this makes no sense. And I walked over to Mitch. Luckily, there was, like, 10 people in the room or whatever told me. And I was like, mitch, how does this make literally any sense? And he's like, oh, yeah. And I was like, what are we doing? He's like, let's just finish it, you know? And it was like, just not well thought out. It was like, there's a lot of balances, a lot of arguments. So as I'm putting complexity to the product and the number of customers grew in, which is also. And that keeps going. So we can't just, like, Cowboy, Cowboy and apple kid just do a bunch of random shit, you know? Like, it affects a lot of people, affects people internally, externally also. So we wanted to have process. Now, one of the things about. Well, now I like process, but, you know, I think I have a big fear and I think Madam Mandis, of process. A little bit. In that we all hate process. And from a very large company perspective, Right, like you get a nuclear. When I got it. To get something done, I have to go through 17 committees and this and that and argue for six months. About why it matters. And then we finally release one feature that no one likes or whatever. And so we always have that fear. I'm always have the fear of bureaucracy. But also we need a task instructor. For being able to do stuff. And so that's where we came up with some of the ways we do process with that. I'll just hold that context in mind. I hate process. But, like, I like simple, clear processes. I'd like to do more work than talk about process. Should be mindless at some level. Like head clear, not like annoying infrastructure. So the forever is like that. Let me know. Also. Because I hate that. But people seem to like it so far. So mawogenized that down, and we started to come up with processes that made sense that we would all want to participate in ourselves. And also we hope that other people wanted to participate. So a few parts of our process. The first thing, and this came from my background. Was the concept of an rp, which some people call it like a DRI or something. But it's the idea that there is a responsible party. For any given work. And the responsible party is. It is a huge topic. It's a huge thing in some level, which is like the buck stops with you. It's your project. Like you can do whatever you want with it at one level, but also you are fully accountable for its outcome. If you are RP over some project, you have no ability say, well, it didn't happen because this other people know it's not this other people. It was just you. And that's what responsible party needs. And that single threaded leadership allows for folks to really feel empowered and stuff, but also have full accountability. Which is the other side of it. That takes a while to get used to that level of accountability, but it's like, no, there's literally nothing you can say other than that was my fault that it didn't happen. And so that's one leadership style that I really like. So, for example, IMRP had some of them. I'm RP of the Engineering Organization. So any mistake in the engineering organization is my mistake. Like there's no one else to blame for it. I created something. I've done something. I've created a culture or create a process. I've created something that led to that outcome. And so there's something for me to look at in terms of how I'm showing up in the space. That led to that outcome happening. And once you get into the habit of doing that, you will see you can change and you can morph and you can actually get better at it. What happens if there's not a responsibilities, then there's a lot of finger pointing and then nothing actually gets better. Nothing gets frozen. All this stuff and me being like everything's my fault. At some level, I'm not in a sad way, but I'm not an accountability way. Then I can be like, okay, maybe there's a process changing. We need to get done. Maybe there's a way I can coach better. Or maybe I'm making a mistake. I'm, like, being too domineering. Or whatever it is. And there's an opportunity of learning and growth that comes out of this content space. And so that's why we think of RP as a very important thing, I think. Now that I'm saying a lot, I think I've said it like this before. But that's what the concept came from. It was like in holding someone fully accountable to an outcome, they also get the opportunity to learn from that experience as opposed to not being accountable for it. And then they get to share their experiences with other people and say, I tried this. And I failed. I was RP did not go well, but here's what I learned. I'm gonna be better at it. But also, here's some knowledge for our portals so that they can also get better than shares. So that's one concept. Rba. There's an amazing book compensable for Rada Monster. That's a lot of I was taught in virtual waterways. So that's my background. But yeah, there are other parts of art piece over there I don't like, so we have our own playground. Okay. Now, our peas are in charge right now. And I'll say one more thing about process is an evolution. What works today will now work for 80 people, will now work for 200 people, will now work for 5,000 people. Whenever we end up becoming right, we've probably iterated this process at least two or three, four times in the last few months. We've got tighter about some language. We've changed some stuff. There's even stuff right now that we're debating talk about it, of how the process work. There are surprises I don't like right now that I'm trying to. I would like to change and get clearer about. So it's an iterative process. So whenever I show right now, Will not be what will be in like two months, maybe even. But I just want to share where we're at right now so you guys can participate in the process as it is today, and then we can iterate from there. Also a process of super feedback or Inca stuff. So if you look at the process and go. I do like this. Process. It's too many meetings or too few meetings, or I feel disempowered or I feel way too empowered or whatever it is. You can say that and we'll. I'll take that feedback in to try to iterate the process. Whatever you like. What? Do you like? Oh, you got a piece? Defeats the whole point. Oh, yeah, I haven't had that, so, yeah. No, I know when it happens, it doesn't go well. I keep noticing that. But we'll talk about politics is today. And is that the main thing? That's one of the things that I. Don't. I think you know. I think that people still haven't connected with the idea of RP sometimes. I mean, I think a lot of people have, but, you know, when we make a mistake, I understand such a human desire to be like, no, I didn't. It was something else. That's such a natural thing. And so I tend to hold people, be like, no, it's Europe. We're not. Like, I'm not. We're not. I don't want to blame culture, but I do want an accountability culture. Where it's like, it's not that, but you have to understand that you participated in that because you're opinion. So you have to learn. But if you say it's someone else's, then you don't get to learn from that experience, which then isn't good for the company or. You or anyone else. So we try to hold people to the accountability element of the work without the blame element chipping. A lot of people jump to very quickly. What does that blame is me. Everyone else is accountable. Okay? So our visa and our charge, our projects. Right now. And projects are a function of goals. A lot of things about goals. Goals are interesting. And we'll talk about this for a second. I'm now discovering. How much time are we here? Okay. No, I think this is important. Okay. How do goals work? Where? Company. We want to do stuff. How does it work? There's few avenues for bullsetting that I use on one of them, as you can say, here's the team. This is what we're capable of. So let's project out from our capabilities. Something we can do. So given our team today, a month from now, we believe we can accomplish this. I don't like that valid goal setting. I would only die. I said it's sellable. Setting for a lot of different reasons, but I'll talk about in a second. Now set a goal setting, which is there are external pressures. Coming to the business. Things like competition. Fundraising. Timing, all these other things. We have to move fast in the world. We have to be. We have to build a moat. We have to be the dominant player in the space before anyone else that I'm on a player. Because if we're too late, we can't undo that. That's a model. We have to be early enough. And so you could say goals are derived. Based on not even looking at the team. At some level, and we say, this is the goal. We're gonna try to accomplish this. And then we're gonna team achieve the goal. And so that's a very different style of goal setting. Okay? Goals become set by strategic pressures. And then we morph and change as individuals, and we grow to meet that goal as opposed to meeting it where we're at. And so we always try to set goals outside of our capabilities. And either we as people have to grow to meet them or we have to find extra people to fill in that gap which pushes the higher in front and front of all the tokens. So a lot of our goals come from that. So our Q3 goal, for example, for a lot of reasons, was achieve 75%, be able to do 75% of CAS accounting that exists in the world. That's one goal. Why? Because we have to be able to do 100%. As quickly as possible. And if the team today went at the pace we did, we'd be able to achieve like 40 or 50. And so we said 75. And then now we're going to try to meet that goal and pushes people and roam that. Now there's a shadow side to that, which is. People get tired and burned out. So we've got to watch that part. Because I want to be talking about that. But that's how we set the goal. Another goal is we need to be able to have as fast latency from someone changing something groups that shown into braces. It used to be that it would take an hour before something short of the cookbooks. Two bases we talk. About why all this other stuff. But now it's getting as close to zero as possible as a quarterly goal because people were getting frustrated with the product expense. Because of that function. And also it wouldn't allow us to sell lending growth. So we would, from these strategic missions, we would come up with uls and the goals would generate projects. Fair. Now, we believe a project has three phases that I was talking about to you today. And it probably has an rp. The three phases are planning. Execution. And delivery. Planning is straightforward. What are we going to build and why are we going to build it? I can send this to you guys later, but we have a set of things you need to be able to fill out and answer about a project in order to say planning is done. But the biggest key for planning gum, is the whole point of planning is you're going to build something. We're going to talk to everyone at the company and even customers. And you can come up with as many open questions as you have about this project. And once you start doing that practice, it will come up with, like, 50 or 100 open questions. You're like, oh, how does this work? How does that work with this? And what happens when someone does this? What happens? And in the early stages of the planning process, this phase, you're just coming up with as many open questions as possible. And on the latter stages, you are answering all those questions. And you are allowed to transition phases when you've answered all the questions. So the early stages are question generation and leadership, question answering. And then you write a document called the scoping document. Which is this is what we're going to go do. As PMS also work alongside engineers who will then write something called a technical architecture document around here, where most of the scoping zone is still open questions, but enough to start document and they will go right, literally, technically, how are they going to accomplish this goal? Also, as you get most of the way through scoping, you will have designers who help design the stuff. And once the architect URE is written, which is someone saying, okay, I can fully visualize what's going to happen and I have no open questions. That also has an infinite open question thing statement scoping. Same with designs. You will finally come up with a timeline. And say okay. This is how long we think it'll take. Initially, though, here we try to do a rough timeline, like a rough one, just to kind of eyeball it. But there's also a rough timeline as a function of we just need to get it done. Right. So if there's a quarterly goal and it takes 12 weeks for a quarter, Projects have to be done, like four weeks, kind of, so we can do all the projects. So we rough estimated eyeball and we say three to four weeks. And during scoping, if you're like, whoa, this is crazy, that's a moment to cut scope, because I would much rather it hit the 3, 4 week. Than to take 10 weeks and do some very complex thing. Usually you want to do projects. I think a project should be on average. Like two or four weeks. It's one week then. Yeah, one to four weeks, maybe. If it's beyond four weeks, then cut it into chunks. Is that fair in, like, your mental framework with the timeline? Maybe. I mean, it might even be shortly. One to three. I'm from license. But at the end of it, you'll have an official timeline. And you'll put a date here. Say, like August 19th. I am putting a flag in the ground. Of when this will be accomplished. By, if possible. Also at the beginning, you usually try to do a date here. There's a little bit more flexibility, but definitely there's a date of when this will be finished. The reason we plan flags. Which is also goal settings, is a positive thing, is that planting flags in the ground and audibly saying, this is what I believe is going to happen. Will lead to two outcomes. Either. It happens. Or you doesn't happen, and you learn something about why it didn't happen. When we've learned in process, when we do not put a date on the thing, we don't have an opportunity to learn from it. It's just kind of like there's this kind of like you get 90% of the way there in the last 10% takes another four weeks, and it never kind of finishes. And it's like. But when you see a date and you say, no, this date, I'm ready to give it to customers. I'm ready. When I say giving. Customer, we are ready. And you put that date in the ground. Where also as a company able to plan around that date. And give certainty to your teammates. It gives clarity to your teammates. They know what can be expected, and they can start planning around that assumption. As well. That clarity is super helpful. And so we get into the habit of flag planting. 500 only works when someone doesn't hit that goal. We don't have culture play. The cultural blame then makes people not want to put plant flags or plant flags really far apart so that they don't feel blamed. But I would much rather you have ambitious flag planting goals and then not have a cultural blame or a culture of accountability. So we learn from that practice. Then in the pursuit of avoiding blame. People plan, they're like, oh, December, or whatever, it'll get done. We need to build a company, so. And I understand that, but. So we try to practice. A culture of accountability. How do you balance that with consistently missing the planted flag? Yeah. So here at this state, we have also, like, let's say the six, three weeks. Each week you set a goal. Mini goal. This is what you present in linear. Have you seen that Monday meeting? So you said a week ago. And then you use that to say, are you gonna hit that or not? At any point. I mean, even as you're hitting this goal, if you're not hitting this goal immediately. Escalate. And say, like, hey, I don't even wanna hit this goal, and we can talk about it. And the more often I find people do that, the more likely it is they hit the ball. That goes because with the help of other people, you can either find hacks, cleaner ideas. Being my cutscope of things that don't matter, all this other stuff. And so it helps to. Helps to accomplish that. But what we've been practicing in the engines. I don't know if the product folks want to participate in this. If you plan to flag on a weekly basis, even to interior larger thing. If you miss this. We're trying to hold a mini retro. Here and we say, what just happened? 15 minutes. What can we learn from this process? And oftentimes it's like, well, all this other random stuff happened. Why are randoms happening? So is testing pony engineered? Yes. Testing? Yeah, testing starts about here. Should they also be part of. Yes. We've been putting testers around here. They come up with the test plan. And testers are here. Manny and the set of Chesters are all new. I think Mozart testers are like a month long couple. And I'll be honest, the process for testing is still being clarified. And so if you have thoughts on that. Also, I've never worked with testers before. So I don't have a good process for that. Still testing super important. Right? Because otherwise you can build all you want. But it may work. It may not work. It's 80% of work. That would be terrible. No, it also led to some terrible loss. Lost one of our biggest customers back in May. Or April, because we weren't hosting, certainly we were releasing it. And so that's why we ended up hiring mangoes at qa. And like I was saying, for me, at least 30% of the time just would worry about testing. Yeah. No, that makes sense. Yeah. So I think we definitely need to test into. I mean, I'm just talking through this because I think too lazy. And I was asking Mitch about detesting. But then man's teams were not confident, right? So probably should have some expert eventually. The team. He's still getting the deployment team to do this. So seven pieces of this, right? I've never seen talk about you. Right, so I know. I'm pretty sure everybody will agree to this. Like the. Excuse me. It depends on how well you play it. Yes. From scoping. From how? Sorry? You've gone through all the questions and flush all the details. Granted. Something's gonna go wrong, that's for sure. Always. But then that unfortunately takes lots and lots of time. Right? Because you want people pulling you from doing whatever delivery you want doing. And you say, hey, let's think about this. I usually hit that. Plan to fly. Yeah, I don't have time. Or they just go through this and the. Oh, yeah, kind of. Right. And then put some convenience in place. So that's also a very, very challenging piece. Yes. Yeah. I think it's extremely important because it should. Otherwise, like, people will feel like I'm doing all the work, but then somehow I'm not getting the satisfaction out of it. Yep. Because I'm not. Hey, my goals here. I agree with that. I think flat planting becomes so one of the things, for example, that came up, I was talking about like iterations with rocks. That's why this document has no longer. I'm asking for this for no one else. So, for example, one of the things we noticed is as engineering, especially in June. Was the number of bugs that was coming in was increasing all of our project estimates by 25%. Because we were all taking a lot of time every single week to also fix a lot of bugs that were coming up alongside the project. Waiting on to two years later, it's a three tomorrow. Yeah, exactly. A lot of our time. One is testing, obviously, to help alleviate bugs happening in the first place. But two, we started to push our flags as consciously and saying, hey, we'll. But then what ended up happening was that we weren't able to hit our goals. We set led to attention. And so then we came up with the new system s that iteration of boxes where we came up with on a call. An on call is one person's in charge of all the bugs, and everyone now can guarantee their project at once. And so that clarity and I think works as a decent system right now, but it has other issues for iterating on. Says one person sacrifices their week, they're not gonna get anything done, but everyone else will be able to guarantee the flags they're planting, or at least as much as possible. So that process is now in play. And then it has other. But we're still heading outdoor. She was like someone who's a backend on call person. If a front end issue happens, celestial pull a foreign person, which then, you know, whatever. Causes issues. Random bugs still happen that are extremely complex and make a lot of build. And then customers have huge demand for it. So, like two weeks ago, we paused like three projects or four or five projects, maybe for a week. And we said, we're just gonna focus on usability this week, and we punted all the flags. Up a week. But the larger point there is that it's a discussion. Right. Like at any given moment, if you wanna move the flag or not. I'm not saying because you plan to flag that you have to hit it. I'm saying that when you plant a flag, if you wanna move it. If you're not gonna hit it, talk about it. It's all these opportunities to collaborate when you don't plan a flag and we don't talk about it. So if everyone agrees that, yeah, totally, this makes sense, we'll push it. We'll push it, that's fine. But when it's done in agreement, Then there's clarity still about how the company operates. And we're all making that decision together, as opposed to one person trying to frantically, without communicating, trying to hit the goal or missing it or whatever. And so it does take a little bit of muscle memory to build that. And I think everyone's still building that muscle memory, but it's okay. To move the flag. It's more that putting the flag than creates all these amazing processes and systems of communication and collaboration, all these other things that wouldn't exist if we didn't have a flat problem. I can understand the pressure to, like, want to hit it. And there is something demotivating, which is another issue of flag planting. Of people constantly filling their mouth, hitting it. But I do think that that pain can be used to power up a new process. That can then lead to more hitting consistent. But I do. I do think that that pain is important. Where does, other than bugs, any work that doesn't fit into a project? Yeah. So I'll give you an example. This happened, this rope process. And then they're process breakers. Mostly. It's made. No, because we're leadership. And leadership comes in and they go. And so, like, I'll give you an example, something that happened, which was that. We had built a product, like a year ago. What's happening right now is kind of interesting, which is that we've never had so many chemicals platform. And up until now, when we were building stuff, we 80, 20, everything was 8020 does 80, 20 and on. The 20s are being discovered in different formats because there's so many twenties across the whole platform. Because when we were initial building, there were three customers. We built it for them and we kind of knew it wouldn't work in certain circumstances, but the likelihood of it that was very low and now the likelihood that that's very high. And so like PDF uploading, who knows who built this like a year ago, it's now being used for write ups cases which we can talk about for right. Of people using PDF uploads and they wanted to upload and they were using heavily. And so what would happen is people would upload, like, 10 files one after another, and that would break a bunch of our code because it assumed it would upload one file at a time. And so multifile PDF upload came in the middle of the week. And the question is, someone will come in. This is something I'm also practicing where someone go drop everything. We have to do PDF uploads. And I'm like, I sit there and go, do we have to. Or can we talk about it Monday? Like, because on the Monday meetings is when we talk about goal shifting, flag planting, all this other stuff. And so middle of the week stuff, it's a muscle. Everyone's learning it still. But you go no. Unless literally a customer is hating our product or is making a product unusable to the best that we can. We try to move to Monday. Like, what does that extra three days get us? Peace of mind? Like, yes, it's a problem. You can think about it. We can talk about them on that. But it's also a muscle. Now. When should we do what? It's like a feeling still. It's not like a process. But that's what we're at right here. Makes sense. But that's an example, something that came up, and it's like, oh, people are using video public. Files and poor boys. Poor boys. I feel bad for Voice, for example. Voice is in charge of the project of Flux. And getting around in this deal, and I don't see this. Flux ended up becoming a few things. One, extremely complex technically, to build a simple product experience. I could not figure out a way with him to get around this, so it became twice as hard technically than we originally planned. Sargon. That goes back to the first one scoping the architect. Yes. I mean, that's always. I feel like that's always extremely. It's difficult. Yeah, Very difficult. When he started the execution, around this point is when he goes, oh, no, there's some case. And we did. And he probably spent a week. Essentially, this is what happened. I don't know what the process is, but he realized he didn't scope enough. And then. And so, a week into his execution, he's still scoping again, which is called an execution. But none of the code was written. And I understood that, but we had to do a retro on that, which is either could be a card. I don't know. Maybe we couldn't have. It's always say that we could have caught it, but, like, it was a very hard technical challenge. And so the ad next week of scoping and it pushed the delivery out one week, so it's actually off by two weeks from the original goal. Then boys had to be the one, for whatever reason, to do the PDF upload thing. So and we have that usability week. And so this is the week that flux should have been done. And it's just starting. And so. But. And so that's a frustrating experience for him, so I will talk to him about that. One on one to make sure that I'm okay with everything that's happened. But now fluxes. And he just requested. And I feel bad for what he had to do. It is he pushed it to September 29th. We pushed another week this week, and he had to, because there's other things happening in silver kind of stuff. Now, September 29th is the end of the quarter. And there's a part where he's like, no, I might do an extra week. After that, I was like, okay. We're getting this done. This quarter. One way, shape or form we're gonna get. And if that means me writing front end code after, we can do it. I don't care. But that's the hard stop now. And either it will pull people from other teams or we're making this project happen. Under this quarter. But that's an example of flag planting where it kept having to move. But again, each of those moves would teach us something. Teach us something about should we have random PDF uploads in middle of the week? I don't know. You know, like, technical scoping. Architecture. What should. Like, one of the things I'm realizing is that our architecture writing is not standardized. Well. I wrote this template, like, in March or April. And hasn't been updated since I was asking people, right? Even just scoping definition of the PE feature. Like, where has it been? What is it? Practice today to capture all the details. Yeah, there is. I can show you the document. So there's all these sections. I would say our scoping document quality is on average like a 7 out of 10 and the technical is like a 4 out of 10. It's better than zero. I'm not gonna say it's better than that. Okay? It's enough for this stage where we can take a better, remote place. And I just have to increase this. And I have another time decreases. If you two want to look at all of our project scoped in the past. Like, we have sections called like, why do it? What would it look like in our section? The linear. Yeah, the linear projects will see a different scoping documents, but we do need to increase the quality of the scope. We're not consuming. You can increase in quality of the technical architecture, technology. Architecture quality is like people. I didn't even know what to write. I was like at that time when we were. Coming out the process, I was like, I've never written a dental exp document. So I wrote some, like, loose guidelines, and people have taken them very different directions. And so at some point, we need to sit down, write a new technical architecture document, and then come up with the format for that. Agreed. All of it. And then increase that to like a six or something. But this is what we're at right now. It's not bad. It's not great. But it works. Aside from things that come up, like, you know, hey, customer, need this, et cetera. Just like. What about when you're planning? It's like, hey, I want to do this thing. We're just gonna take a day. It's not a one week or three week thing. So. Just one second. I just realized. The time. And I wanna make sure that. I'm not. Supposed to. Was there an interview right now? Oh, there was supposed to be an interview. Oh, we started 11:30. Oh, great. Not 11. Okay, perfect, perfect. Sorry. Say that again. So someone comes to you and says, hey, I think we should do this thing. But it's a one day thing. It's not a one week or three week thing. Do we not do it? We add it to linear. Again, this goes into one of those things as much as possible. We talk about a Friday, Mondays in our engineering meetings. So we have a product engineering assistant meeting, our platform now. And then we have Asian pod meeting. And so we talk about those extraneous items that week, and then we have change our goals for the week. Before we take it on or on. So I'll say something like, okay, that seems like it'll be two days of work. So with that, can you adjust your flex goals? Are we pushing that project forward? We just have that discussion. There. From the current events as well. Just again, I would say the name of the game's clarity as much as every once in alignment that this is what's going on. Then we're good. Right. Where I think a lot of companies struggle is either they don't put flags and then no no's, or they keep changing people knowing. And so, like, there's max clarity. And so, yeah, that's a great example. Now if it happens on a Wednesday, it's a game time decision in that moment as much as possible. I don't like breaking process, but it also happens. Pretty often because we still have a lot of customers. And there's a lot of issues. And people are still discovering old stuff, and so not a perfect process for iterating to it. The other part of this, I would honestly say, is just having some level of flexibility for that. Right. Like, as much as I would love to be a robot doing the process perfectly, There's this, like, you know, feeling it out. And sometimes I get disappointed. I'm like, I shouldn't have done that. There's space to iterate on. Yeah. What what happens is once the project has been given to an rp, you will have a space in linear as an RP to write all your projects coding documents and that. And then the Monday meeting. It's very simple. You plan to flag for what you'll do by Friday. So there's a template I can show you by the end of this week. Put a date. This will exist. You're saying this will exist? Colon. Then you list down the things you are going to create that week. We're very specific at the language there. Because, for example, like I said, this will be better. Better doesn't mean shit. It doesn't. It doesn't mean anything. But if I said by the end of this week, we will have a completed document. That's a binary thing. I can measure that. Either there's a completed document or it's not a complete document. Okay, like there. So the goals have to be measurable, otherwise they're not goals in a lot of ways. So things will be like our unit. Tests will pass 72% of the time. From 54 right now. Great. It's either 72 or it's not 72. And so that's a great way to plant flags. Flag flags have acquired. It has a specific date or a specific goal that's measurable. So that we can use that to learn from that experience or not. So let me see. Determining the plenty of face. Yes. I need inputs from four different teams. Yes. You know, all these teams. Yeah. So that means I need. I need time. Yes. Right. So how do we. How do we. How do we get that? Great consumer on Monday. Mornings we come in at 10am, the team meetings at 11:30. Okay? From what, 10 to 11:30, we have what's called as communal planning session. Communal planning is very simple. We roll around in chairs, we find time. Good folks, so I need your time. I need your time. And people love helping other people, so it's not like a fight. Okay, so we make time for each other. And so I would say Monday from 10 to 11:30 is the best time to get calendar. Get things on your calendar to rank linear tickets for your projects and make sure that your goal for the week is achievable. Just really meditate for that hour and a half about what you want to accomplish the week. Who you need to accomplish with, what tickets do you need, what work you need, what helps you need, and then go find out who's people for that hour and a half in order to make sure that that goal is accomplishable. And so that's when you. So if it's four teams, you can. You can. Or you don't even have to ask people. You can put a calendar on their thing. And then message them saying, hey, I really want to talk to you. I've got some tap time on your thing, and that's fine, too. That's our process right now. People don't get it more by that. It helps be like each other. If we don't like each other. Maybe different process. So, yeah. Monday at 10. Is when we're small enough to be able to do that, you know, so you can just pick times counter do the answers for people. Usually that's another system that's active. And then, you know. And then at 11:30, you will present your project. What you accomplished last week and what your oil. Actually, Mondays, you don't need to talk about last week. You just say what you can accomplish this week. It's 10 seconds. Or 15 seconds. Whatever, master. And 12 seconds. It was very simple. By the end of this week, This will be done. This will be done, this will be. End of update. Then everyone knows. And everyone can plan around that. Expectation. And then Friday evenings, we do the same meeting again. And we just say, did it happen? Or not. This happened, this happened. This didn't happen. And for the things that don't happen, at least with me. I try to go find those people later and just talk to them about what happened so that we can next week be a little bit better about what happened. It could be that, oh, this random thing happened, and then I'll go medicate on that either, like, you know. There's some process change that I need to improve or get a cognitive sentence. There's something we can do to be better about it, so we'll try to ideate around that. When you want to go from planning into execution phase, there's a channel called Project Transitions. You just say everyone's checked off on scoping. You do a final run through, you send to folks as usually Madam Mitch and other people who are in multi project say scoping is done, architecture is good, designs are completed. Timeline is clear. We're gonna move this into execution. Now. Same with delivery. Delivery is an interesting face. It's not. It's the DI homes that we're doing process right now. And, you know, when you give the customers very different because you have to write email updates. You have to update the git book. You have to write, record videos of how this feature works. So there's a lot of work to be done there. But from a product ends perspective, we try to get a healthier. They also do a final round testing though. We made a rule that this point is you putting your foot on the ground saying this is ready for customers. So Di comes back and says this is then that's fine. But. But in that tester and all this other stuff, like you were saying, independent, bi. Whatever. I'm excited to give this your customer tomorrow. And it will not break. I save. So. And if you cannot confidently say that. Fix it. Don't try to give it. Please have this happen where it's like, what am I definitely broke. When that happened. And so let's not play that again anymore. We play that game. I don't like that game anymore. So you're putting the ground and saying, this will not break. Okay. And it breaks. That's fine. But. But that's when you can go to delivery no longer. Question. So today a lot of the test is done by dip. No, no, we have testers. Okay, guys, so you'll be assigned a tester for your project. Depending on capacity and all that stuff. And I have to mango, that's it. And so they send testers. To projects, and then the testers will talk to you as well. Questions? And the way men works is that he wants each contest to develop a relationship with rp. And so you'll chat with your tester, they'll ask a lot of questions, you'll explain the project, all these other things, and then they start to get to working back. But they usually work in the background. And then there will be other developers and developers will send them PRs and stuff. Before we merge it into production code base. Anything else. Connor that I missed in the comments. I think that was a pretty good overview. That's why it's my first time. Bushi does each time. Having to hide in the window. That's great. I'm just trying to think. Oh, this is their last thing right now. This is the process. Is. Each of these have an rp? We have a 3rp system. But that's the. That's the thing right now. Sure. Partly because we don't have product owners or dedicated people who own, like, what engineers can tell the delivery person. Like, someone's got to make sure that the delivery person does their job correctly and on the schedule. Does the engineer gonna do that? That seems kind of weird. You know. But who's gonna do all the coding? Well, someone's responsible for the code being executed against. So that would be the engineer. And the planning sometimes would be done by the accountants. Right. And so who knew? Accounting matter and monitor. So you would have. Sometimes the good projects had one RP to hunt, kind of. Or one RP for these two, and then maybe another one for this. I think the harder projects at 3, the grade never worked well, I think, because this person had up to here. And this person would be like, the scoping is not great. And then they would be like this. And then there would be some confusion about who owns what where. And so I personally start to see that. And so right now, as much as possible, we try to do the same RP for both of these. But now that you guys are here, We'll talk about that process. I'm not a biggest fan of that. My. My better feeling is one RP for the whole pipeline, and then that RP is working with different people. Make sure this is happening. So that could be an accountant here and a DI person here. And this person can be any of these or another person. I don't really care. But in that world, That person is still ultimately responsible for this project. Getting. Through to the end. So that's not the system we have today. So that's a proposal. That. I mean, it's kind of. I think maybe it's kind of happening without us talking about it. Because I think that. I just want to make note like boys, for example. Create example of this voice is doing the planning for flux. Which is great, and the execution. So him, as an engineer, is doing a lot of planning, working with designers. Working with accountants to ask them questions. We teach all of our engineers to be able to do this section, but for more complex projects, there's, like talking to customers. And spending like literally all your time on it. So that's where product people are more helpful because it's like a full time job. And so on, but we have trained a lot of the engineers to be much better at this space. And so right now, as much as possible, engineers take both of these. And because they're the same person, they can do it. Pretty well. I don't know if that's killed. But I do kind of like that sometimes there will be projects where, like, engineers are RP for the first two phases. You know, boys isn't going to tell, you know, whoever, Elijah or someone. That like their delivery plan is bad, you know, or. So that's where it works. But maybe that's fine, too. I don't know. Maybe that's one or the next or two. RP system complete. Anything else. I will send. If you look in notion, you'll see a document called RP MK. Search for. Date. Notion. It's not in anymore. Oh, yeah, we have a wiki. Sorry, I was gonna ask. Yeah, why? Why? Nourishment? Anything new anymore. Atlas guy's face. That's crazy. Yeah, I was just curious, and I'm trying to learn. Yeah, it's good. And so we haven't updated this. I need to. This is thing that I would love if anyone here has ideas on this, but RP framework. And then RP project process planning into your delivery. We'll have a lot of the. Stuff. This hasn't been updated in a few months. This is actually a great example. Of apples. By the way, take this gift book. Tell adopted with the notes here? Yes. If you want to try that. Actually, you should try that. Just to see how it goes. Yeah? Yeah. And see what happens. I don't take kind of fun. That's a good example of how I'd like to Granola. There's a lot here. How to make this anything. It's so messy, but it's less messy. Each month. Every month we're slightly less messy. Makes me feel so human. S. Jeremy. How was that? That was very good. Yeah, I thought so. I think the project planning stuff, the dit. I don't know if you guys talked about it either because all of a you guys are on linear doing projects and stuff. I do think it might be helpful for the same. We always talked about it quite yet we probably do need to formalize it and start training on it. Honestly, like, I'm not even quite sure of how that works either. Okay. Yeah, so that's important to know. I feel like DM would have a slightly different way to do all this stuff because, like, you guys are on this face of, like, the stuff doesn't matter, so. Yeah, I don't know. I don't, you know, But I do think we should teach the whole process. Every person coming at the company because that's how Monday meetings and final meetings make sense. I would make accounting 100 in this and the books. Clients think part of the boot camp as well. Maybe we just have one thing we need. Well, I guess just what we need to consider is, like, the time for the boot camp. So we played around with ideas of making it, like, multiple days. Where we settled was it's like two, two and a half hour sessions on one day. So we would probably have to extend it to include this. That doesn't mean we can't. We certainly. Well, we can switch. I mean, maybe it's another day, maybe it's not the same day. So it's. Not too much, but I do think. I think accounting 100 to start. And this might be helpful for the Monday meeting stuff so we can explain what just happens. And then because di specific, because we want to do a separate coding boot camp of, like, how we code and, you know, how to encode a basis. Which has a lot of rules. And so that's where we can deviate. But I think there should be some shared one that I'll do. I think the other two ones you have are also shared. Right. So maybe this can be part of the shared and then. And. Then I know it's separate from there. Yeah, that makes sense. Cool. All right, that's end of the. Thank you. Thank you. 