## Meeting
Calendar Event Title: 
Calendar Event Time: 2025-09-17T19:16:48.661Z
Meeting Note Title:PromptAnnette/Matthew
Attendees: 
Link: https://notes.granola.ai/d/61a9e3c8-8790-43c1-8a8a-69f2ba012320

## Transcript
 
Me: I know that at some point this is all going to disappear, but I'm happy to walk you through how we even got here. I would love that. That'd be great. Okay. So let me just collapse all this. So Prompt library. This is meant to be something very general, just in case anybody else wanted to use it for prompts. I just started off by throwing a procedures one in here, okay? People could have added anything else they wanted here. Just hasn't happened yet. Let me also just. I think I'm already up to date. Okay. So in here. We have procedure files. So, 1, 2, 3, 4, blah, blah, blah, until 76. And then these index numbers are just the index of whatever the unit test was in a master sheet. In Google sheets so I could, like, link them to it. I wanted these to start off with one. So they could be numbered. But we also build out tests related to each procedure. And the test had its own number. So that's where these numbers came from just backing up. These are for, like, the workspace product. Each just to visualize this, that is this. So when you go into workspace, You go. The library is going to be the first time you end up on there. Should be 51 of them here. 51 of them are live. Okay, and are they pulling directly from this, or is this going from here into a database? And then they all live in the database right now. Or maybe in the next five to five hour, five minutes to five hours, they will no longer be in the DB okay, so in the DB. There is something called agent workflows, okay? That has all of them. Cool. I know that's about to change, but is it one for one with this, or is there some sort of process of, like, you write it here and then someone takes that and puts them in? Exactly. So I would make them all here. They had a nice, like, standard structure here. All of these would align with the headers would align with columns that I would then use a script. Script to individual procedure files to Excel. And then we put them in, like, a Google sheet. Where we'd work on them. And then this is where we'd like write the unit test like what's the expected correct answer based on if we were gonna test it on this book and this, this file was gonna be uploaded iterate on them there, find that things weren't working, go back in here, talk to the LLM I. Need to make all these changes. Make the changes. Send a pr all good export every once in a while. Keep on, Keep it going, okay? And then. And then, once it's officially done, And good to go. And developer takes that from the Google Sheet and then uploads it to the dba. Yes. So there's a poem called Live True or false here, and 51 of them are true. So you'll see up to 51 of them here. There's 62 rows here because there's 11 that have an accountant ID. 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 or 10? What? Should be 4, 5, 6, 7, 8, 9, 10, 11. Okay. If there's any content ID on it, it means some specific individual. User. Maybe us, maybe someone else. Maybe custom one. So if it's custom, it's not available for the public. All the public ones are the 51 that stay true here that are in here. But there are excess in here that are either not tested or have been tested enough in performing well that we are gonna keep iterating on before we decide to make them live. Okay? So that's the process today? In 10 minutes, whatever. It's about to change. Yes. What's the new process? Essentially, this is gonna be replicated in the other repo. We're in Atlas right now. It's gonna be an Arnold. And I don't know that it. Actually, I can. I don't think I can find the file path right now. I don't know if it is there, but we're gonna have something very similar. So we'll have a procedure files where one underscore procedure, the index is gonna disappear because. We're migrate this master sheet such that the index will align with the 1, 2, 3, 4, etc. And then this next thing is props. So because they have kind of long names, we do just wanna, like, write them in here. Because what if we decide to change names? Kind of annoying. I would rather just have a table of contents. Okay, cool. So when you say, oh, like, where is this table of contacts? Talk to LLM, Just review it. At some point, you just kind of remember where things are. Find this and then go here. Cool. What are the other things you perhaps? Yes. So this is improvement prompt. So this is essentially the prompt that tells you how to write these, because in a way, the procedures are prompts themselves. It's a lot. I know. I'd rather go in here and say, hey, I need to make a new procedure in this folder. Look at 10 of them, for example. And then look at this. I'll just do at procedure improvement from. And make them such that they align with these following this guidance in here. Make five right now for these five different things that I want, and it just, like, works really quickly. Once you switch out of this to this new these are Arnold's going to or rather the Protestant will pull directly from not the database. Right. So how will you iterate on these without messing with live customers? That's a good question. I think what we will do is we will iterate them on prs. And, like, maybe we'll, like, merge our branches if we're working on different PRs and then test from there. Or maybe another thing that we can do is there might still be some elements of it that is in the db, like, for example, We might have one underscore procedure uuid such that that uuid that chunk of string from the file name can be represented here. And then it could be like, live or draft, true or false. I think, at the end of the day, like most of our own work, even, like, for things beyond procedure. I just iterate on a PR and then I test it there and then when it's good. I just apply it, Merge it. So just repeat it back. Basically, once we get an Arnold. You'll continue with the same workflow. Make your iterations open a pr. We can run evals on the VR. And then if they pass push through it. Exactly. And if we need to make new ones, of course we'll make a new file. And even if we just had to merge that in, there needs. There will be some elements of live true or false, draft or production, like the status. That Connor's find a way to build out so that we can make new files and they could even be in production. But they won't. Sorry. They'll be on Maine, but they won't be like in product. Ive. Yeah. They won't be live. Because what if you, like, make one and we make five and we think they look really good, and I just don't want to have this PR open. But we test, like, the next week. Yeah. You want more control. The way you'd have, like a website, cms. It's just like, it's there. You can, like, publish, you know, draft or whatever, that sort of thing. Yeah, okay. Cool. One more is improvements evo feedback. So this is as we run evals. There is an LLM that looks at the output. And gives it an accuracy score. Anything under some percentage. Is a failure. And it will try to examine why there's a failure. And we might run five to ten. Run the same procedure five to ten times. And our definition of success at today, which might not be the same definition tomorrow, is at least 80%. Okay, so we look at the ones where, you know, at least seven or fewer out of ten. Are are failure. And then we look at the ones, all those. And we say, okay, here's the failure analysis. On each and then there's a meta level failure analysis. An LM said all the individual failure analyses and gives its own high level failure analysis. And then we'll copy that. We'll throw that in here. We'll say, look at this, look at this, look at this. I didn't prove it. Go and fix it. Yeah, yeah. And then run it again. And then that's like the PR that I sent you this morning of like, Chris. He probably just did something like that. It's cool. Okay. This really makes sense. Let me just make sure I got. Let's see. So we know where it lives long term. Now I understand how they got updated. Now how I understand. Connect, arnold. Think that was? Yeah. If you're curious on the other scripts where sell to single markdown files. So before we started using this, we were just on Excel and then it was a smaller quantity. And it was more digestible in Excel, so I just updated in Excel here. And I kept this just in case we ever needed to do this. And then I would run the script on the Excel file to make individual markdown files based on that Excel. By the way. Like, did you through cursor make these scripts? Yeah, they're just in person. Nice. Very cool. I love AI. Okay, so that and then Excel to individual procedure file, single marked out. Oh. The single markdown file was a table of contents. And then individual procedure files was all the individual ones. And now this one is if I just like. Run this one. It's gonna give me a. It's gonna process. This is gonna come up here, and then this. I could just drag it into my. Yeah. And we just paste it over this. And then number third. The third one is before Chris had access to cursor. I don't know why there was this even disappeared at all. I would just export it to a zip file. I would give him the whole zip file, then he would get the zip file, and then he would work from it from there. No access and cursor, but not he didn't have access to Atlas. Are you and Chris the only people that are doing this right now? That are working. No. Anthony's Anania. So three of you are all updating procedure files. Are there other things that you're going into Chris Room changing Other than this whole piece that you're owning right now, Is there anything else? Yeah. I work on anything that. We get a good place? Here. Okay? Back in core agents context, library contacts, library. Is to say that this is anything that gives the agent context. Specifically for workspace. Maybe in the future of other things. Cool. All these things. All these files. That are, like, all capital letters. Are things that I have worked on. And this is context of the aging will retrieve when it needs to answer a question that may be that the information here might be relevant to. User ask something about articles of incorporation because they upload that PDF, they're gonna find something here. So here's just a lot of common document analysis types. And this is gonna grow. Obviously just indefinitely. So this is what we have today. So I work a lot on this. And I work on other things in here, like the partials. Pretty much everything in context. Library is fair game. Yes. Let's see. I kind of avoid the things that are like py files, just Python code, and that's not my forte. Sure. But I will edit those if I need to. If I find something, I'll just vibe code it away and ask your else to look at. Understand? But you're mostly working with the markdown. Files here. In our home mostly, but then I go to down here. We'll have here. Skills, LLMs, all of this. Kind of fair game. I have a PR open that impacts, like, four of this right now. So prompts. These are the prompts that power the task module. Nice. Skills. In the task module. You run tasks, but tasks have underlying templates. Or tasks can be manual. No template. But a template can be used on one task or could be used on different tasks. So you can have record journal entry from Excel. That's one template. And you could have a test record journal issue from Payroll xl, record your new entry from Depreciation Excel. So a template can have multiple different uses. Now every single template. Uses skills, and a skill is essentially calling on some sort of, like, async definition. Where something happens, something is transformed via Python. So if I find that a skill is missing. Or if I find that maybe not a skill is missing, but I keep on doing the same thing over again in templates. I might want to turn it into a skill that I don't need to always define in a template. And I'll tell you where templates are shortly, okay? So that I could just have them always available in any template for any time that I want. And these ideas are just coming from you using the product yourself. Initially, I'm not an engineer, so I could not come up with the initial concept of this. The concept of a template, of a skill like that was never. And now that I'm very familiar with it, I just know where things live. To even come up with new ideas though. Is it because you're in basis and using the product and going, oh, this isn't doing what I wanted to do either I'm using it as long as we want to user is or it's really just those are the two available? Or maybe somebody wanted to do, but it could be better. Okay or users like this looks good, but it could be better. Or you do a lot of things that I want to do, but you're missing one thing. Build it out. If we don't have the capabilities for it right now. And are you doing the same job like the DIT with a lot of people? Is this. What's the word? Is this what you're doing instead of doing a lot of the other things that the IT team is doing, or you're also, like, working directly with customers and doing? I'm technically not into DI team, but I'm not responsible for any firm. I'm not. Constantly keeping up with clients. I will be on high calls. If I need to, like, sit in for some, like, special requests, like, hey. Like move on basis to do this whole thing. That is nowhere near what it's doing today. Let me go listen to it so I could, like, understand it, so I could translate it into a way that I could, you know, like an aero circle where Ryan would understand that. What team are you on? Just accounting, okay? It was just the general accounting team, which means you do a bunch of stuff. Yeah, for now. Okay. Team name will change. Understood. Cool. This is very helpful. Yeah. You were going to show the templates, maybe the LBs. Yeah, yeah. There's just so many things I've touched. I was like, you know, one file will reference something in another file or visiting it or another file. So I just, like, follow the path and it's. I mean, it's definitely not. My. Initial. Like, I don't know how to do this extremely easily, but I'm getting better at it now. You're from la, you're getting more. Yeah, I've been using Pussy for a year now, so it's one of my favorite apps. Okay, a template. Now this actually lives in retool. Oh, wow. Okay. Because templates live in the db. Do you know why? As opposed to living in the files here? No. I think, for just maybe just like a ease of access or simplicity of management and I guess maybe like a. I don't know, less likely, but that someone can go in here and mess it up, which is really. I'm the only one that can go in there and mess it up. Fair enough. For Anthony, no. He's been working on templates as well. So product code editor templates, this is just something that is you can, anyone can access and retool. But right now, only infinity. Anthony and I are making templates. So template editor. Published. There are 118 templates. Every single template. If you click on one. Is just like an async definition. I made all the temples and I will. There's a good amount here. They pretty much do what people want to do. Like, this covers a lot of what CAS accounting is. But people that occasionally ask for more, and that's fine. We'll make more. But it's just a little rarer these days because, as people used to ask in the past, You know, you build them up, and now it's just, like, the likelihood that they need. Yeah, exactly. Education. Very like niche requests too, which is fine. It's cool that they ask for these things. Can I just end the basis product where templates live? It's in tasks and then. Yeah, so you go to. You go to all tasks. All tasks. Or checklists or autopilot. So let's say you're an all task and you go to add top it just essentially goes to the library of it. So Air Prepare is a default. If you're here, but it will also be the default if you are in checklists. And then if you go to autopilot, The default will be auto autopilot. But if you change it, it doesn't mean it's gonna land on autopilot. It's just me just gonna land in another page. Makes sense. Okay. And then add template. This is basically the library of templates. And here they all are. Grouped by account type. So, for example, cash investments, accounts receivable. Or there's two other ones. Called financial reporting. And general. There's a lot of things that are just general. That means there are 26 account types. And they're plus these 228. But not every single account type has a template. Some of them are kind of niche, like right of use assets. We don't have anything for that yet. Contingent liabilities. We don't have anything for that yet. So there's not actually 28 categories here, but there's a maximum exposure of 28 categories. Gotcha. Okay. That makes sense. Very cool. Sweet. I will. Probably in a couple weeks. Keep asking more questions. But, like, this is super trouble. Okay. Thank you. Ask one over. Okay. Thank you so much. And then you kind of transition. Into what? To Jira. 